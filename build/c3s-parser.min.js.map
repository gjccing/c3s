{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///c3s-parser.min.js","webpack:///webpack/bootstrap befa32066bc812cfac54","webpack:///./src/main.js","webpack:///./src/selector.js","webpack:///./src/css-parser.pegjs","webpack:///./src/util.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","c3s","option","_selector2","Object","defineProperty","value","_selector","_util","getFromPath","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_typeof","Symbol","iterator","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","getter","_cssParser","_cssParser2","Selector","_Array","findFirstMatchNode","combinator","node","result","operator","_depthFirstSearch2","_m$traverse","m$traverse","m$node","m$path","m$parent","_m$visitor14","_m$compound2","next","_fatchCompoundSelector2","_FATCH_COMPOUND_SELECTOR","element","length","ident","attributes","matchAttribute","pseudoClasses","_m$tmp3","findPesudoClass","errorValue","_m$combinator9","_fetchNextSelector9","_FETCH_NEXT_SELECTOR","_m$tmp4","Array","push","apply","m$key","m$newNode","m$tmp","slice","indexOf","concat","_m$result11","_m$tmp9","_m$node","_m$path","_m$parent","_m$key","_m$newNode","_m$depth3","_breadthFirstSearch2","_m$buffer","shift","_m$visitor32","_m$compound9","_fatchCompoundSelector9","_FATCH_COMPOUND_SELECTOR2","_m$tmp7","_m$combinator10","_fetchNextSelector10","_FETCH_NEXT_SELECTOR2","_m$tmp8","findMatchNode","tmp","_m$traverse2","_m$compound6","_fatchCompoundSelector6","_FATCH_COMPOUND_SELECTOR3","_m$tmp12","_m$combinator11","_fetchNextSelector11","_FETCH_NEXT_SELECTOR3","_m$tmp13","_m$i29","_m$I29","_rec6","unshift","_m$tmp18","_m$node2","_m$path2","_m$parent2","_m$key2","_m$newNode2","_m$depth4","_m$buffer2","_m$compound10","_fatchCompoundSelector10","_FATCH_COMPOUND_SELECTOR4","_m$tmp16","_m$combinator12","_fetchNextSelector12","_FETCH_NEXT_SELECTOR4","_m$tmp17","_m$i30","_m$I30","_rec7","attrSelectors","_every4","_m$result12","_m$i23","_m$I23","_attrSelector2","_m$visitor36","type","scope","name","ID","Id","path","_every5","_m$result13","_m$i24","_m$I24","_pseudoClass2","_m$visitor37","_pseudoClassMethod","pseudoClass","_pseudoClassArgs","args","_tmp2","_this","assign","selectOne","input","target","__option__","cssRules","parse","_some","_m$result","_m$i","_m$I","_m$visitor25","start","__data__","__root__","selectAll","targetList","_m$i11","_m$I11","_m$input5","_filter4","_m$filtered4","_m$i25","_m$I25","_m$val4","_m$visitor27","_every6","_m$result14","_m$i26","_m$I26","_node4","_m$visitor28","_m$array9","_m$array10","_compareTwoArray5","_m$result15","_m$i10","_m$I10","_m$i27","_m$I27","_nodeInfo3","_map3","_m$length3","_m$result16","_m$i28","_m$I28","delimiter","arguments","charAt","substr","split","_map2","_m$length2","_m$result10","_m$i16","_m$I16","_nodeInfo4","_m$visitor30","getFromPathArray","_m$input4","_filter3","_m$filtered3","_m$i15","_m$I15","_m$val3","_m$input3","_m$i14","_m$I14","resetRoot","_m$i17","_m$I17","_tmp","regexpTest","val","test","equal","peg$subclass","child","ctor","peg$SyntaxError","message","expected","found","location","Error","captureStackTrace","peg$parse","text","substring","peg$savedPos","peg$currPos","peg$computeLocation","description","peg$buildException","error","peg$computePosDetails","pos","ch","details","peg$posDetailsCache","line","column","seenCR","startPos","endPos","startPosDetails","endPosDetails","offset","end","peg$fail","peg$maxFailPos","peg$maxFailExpected","cleanupExpected","i","sort","a","b","splice","buildMessage","stringEscape","s","hex","charCodeAt","toString","toUpperCase","replace","expectedDesc","foundDesc","expectedDescs","join","peg$parsescope_relative_selector_list","s0","s1","s2","s3","s4","s5","s6","s7","peg$parsescope_relative_selector","peg$FAILED","peg$parseS","peg$c0","peg$silentFails","peg$c1","peg$c2","peg$parsecombinator","peg$parsecompound_selector","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$parsepseudo_class","peg$c8","peg$parseprop","peg$parseid","peg$parseclass","peg$c9","peg$c10","peg$c11","peg$c12","peg$parsePROP","peg$c13","peg$c14","peg$c15","peg$parseIDENT","peg$c16","peg$c17","peg$c18","peg$c19","s8","s9","s10","s11","s12","s13","peg$c20","peg$c21","peg$c22","peg$c23","peg$parseVALUE","peg$c24","peg$c25","peg$c26","peg$parseNUMBER","peg$parseSTRING","peg$parseREGEX","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$parseSTRING1","peg$parseSTRING2","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$parseSIGN","peg$parseNAN","peg$parseINFINITY","peg$parseBINARY","peg$parseOCTAL","peg$parseHEXADECIMAL","peg$parseDECIMAL","peg$parseFLOAT","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$parseINDEX","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","exp","Combinator","Compound","Prop","Class","PseudoClass","options","parser","peg$startRuleFunctions","scope_relative_selector_list","peg$startRuleFunction","first","first_comb","first_comp","more","item","trim","pseudo_class","compound","prop","source","flag","src","RegExp","eval","sign","NaN","Infinity","Number","peg$result","startRule","SyntaxError","_every","_val2","_m$visitor4","listStruct","depth","toLowerCase","_m$tmp"],"mappings":"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","file":"c3s-parser.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"c3s\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"c3s\"] = factory();\n\telse\n\t\troot[\"c3s\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"c3s\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"c3s\"] = factory();\n\telse\n\t\troot[\"c3s\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _selector = __webpack_require__(2);\n\t\n\tvar _selector2 = _interopRequireDefault(_selector);\n\t\n\tvar _util = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction c3s(root, option) {\n\t  return new _selector2.default(root, option);\n\t};\n\t\n\tc3s.getFromPath = _util.getFromPath;\n\t\n\texports.default = c3s;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _cssParser = __webpack_require__(3);\n\t\n\tvar _cssParser2 = _interopRequireDefault(_cssParser);\n\t\n\tvar _util = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Selector = function (_Array) {\n\t  _inherits(Selector, _Array);\n\t\n\t  function Selector(root, option) {\n\t    _classCallCheck(this, Selector);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Selector).call(this));\n\t\n\t    var self = _this;\n\t    Object.assign(_this,\n\t    // default public property\n\t    {\n\t      selectOne: function selectOne(input) {\n\t        var result = new Selector(undefined, self.__option__);\n\t        var cssRules = _cssParser2.default.parse(input);\n\t        var target;\n\t\n\t        var _some = void 0;\n\t\n\t        var _m$result = false;\n\t\n\t        var _m$i = 0,\n\t            _m$I = cssRules.length;\n\t        while (_m$i < _m$I) {\n\t          var _m$visitor25 = void 0;\n\t\n\t          target = findFirstMatchNode(cssRules[_m$i].start, self.__data__);\n\t          _m$visitor25 = target !== errorValue;\n\t\n\t          if (_m$visitor25) {\n\t            _m$result = true;\n\t            break;\n\t          }\n\t\n\t          _m$i++;\n\t        }\n\t\n\t        _some = _m$result;\n\t        if (_some) {\n\t          result[0] = {\n\t            value: target[0],\n\t            path: target[1],\n\t            root: self.__root__\n\t          };\n\t          result.__data__ = target[0];\n\t          result.__root__ = self.__root__;\n\t        }\n\t\n\t        return result;\n\t      },\n\t      selectAll: function selectAll(input) {\n\t        var result = new Selector(undefined, self.__option__);\n\t        var cssRules = _cssParser2.default.parse(input);\n\t        var targetList = [],\n\t            tmp;\n\t\n\t        var _forEach = void 0;\n\t\n\t        var _m$i11 = 0,\n\t            _m$I11 = cssRules.length;\n\t        while (_m$i11 < _m$I11) {\n\t          var _m$visitor26 = void 0;\n\t\n\t          var _m$input5 = findMatchNode(cssRules[_m$i11].start, self.__data__);\n\t\n\t          var _filter4 = void 0;\n\t\n\t          var _m$filtered4 = [];\n\t\n\t          var _m$i25 = 0,\n\t              _m$I25 = _m$input5.length,\n\t              _m$val4 = void 0;\n\t          while (_m$i25 < _m$I25) {\n\t            _m$val4 = _m$input5[_m$i25];\n\t\n\t            var _m$visitor27 = void 0;\n\t\n\t            var _every6 = void 0;\n\t\n\t            var _m$result14 = true;\n\t\n\t            var _m$i26 = 0,\n\t                _m$I26 = targetList.length;\n\t            while (_m$i26 < _m$I26) {\n\t              var _node4 = targetList[_m$i26];\n\t\n\t              var _m$visitor28 = void 0;\n\t\n\t              if (_m$val4[0] !== _node4[0]) {\n\t                var _m$array9 = _m$val4[1];\n\t                var _m$array10 = _node4[1];\n\t\n\t                var _compareTwoArray5 = void 0;\n\t\n\t                var _m$result15 = true;\n\t\n\t                if (_m$array9.length == _m$array10.length) {\n\t                  var _m$i10 = 0,\n\t                      _m$I10 = _m$array9.length;\n\t                  while (_m$i10 < _m$I10) {\n\t                    if (_m$array9[_m$i10] !== _m$array10[_m$i10]) {\n\t                      _m$result15 = false;\n\t                      break;\n\t                    }\n\t\n\t                    _m$i10++;\n\t                  }\n\t                } else {\n\t                  _m$result15 = false;\n\t                }\n\t\n\t                _compareTwoArray5 = _m$result15;\n\t\n\t                if (!_compareTwoArray5) {\n\t                  _m$visitor28 = true;\n\t                }\n\t              }\n\t\n\t              if (!_m$visitor28) {\n\t                _m$result14 = false;\n\t                break;\n\t              }\n\t\n\t              _m$i26++;\n\t            }\n\t\n\t            _every6 = _m$result14;\n\t            _m$visitor27 = _every6;\n\t            if (_m$visitor27) {\n\t              _m$filtered4.push(_m$val4);\n\t            }\n\t\n\t            _m$i25++;\n\t          }\n\t\n\t          _filter4 = _m$filtered4;\n\t\n\t          tmp = _filter4;\n\t          Array.prototype.push.apply(targetList, tmp);\n\t\n\t          _m$visitor26;\n\t          _m$i11++;\n\t        }\n\t        _forEach;\n\t        if (targetList.length) {\n\t          var _forEach10 = void 0;\n\t\n\t          var _m$i27 = 0,\n\t              _m$I27 = targetList.length;while (_m$i27 < _m$I27) {\n\t            var _nodeInfo3 = targetList[_m$i27];\n\t\n\t            var _m$visitor29 = void 0;\n\t\n\t            result[_m$i27] = {\n\t              value: _nodeInfo3[0],\n\t              path: _nodeInfo3[1],\n\t              root: self.__root__\n\t            };\n\t            _m$visitor29;_m$i27++;\n\t          }\n\t          _forEach10;\n\t\n\t          var _map3 = void 0;\n\t\n\t          var _m$length3 = targetList.length;\n\t          var _m$result16 = new Array(_m$length3);\n\t\n\t          var _m$i28 = 0,\n\t              _m$I28 = targetList.length;\n\t          while (_m$i28 < _m$I28) {\n\t            _m$result16[_m$i28] = targetList[_m$i28][0];\n\t            _m$i28++;\n\t          }\n\t\n\t          _map3 = _m$result16;\n\t          result.__data__ = _map3;\n\t          result.__root__ = self.__root__;\n\t        }\n\t\n\t        return result;\n\t      },\n\t      getFromPath: function getFromPath(path) {\n\t        var delimiter = arguments.length <= 1 || arguments[1] === undefined ? '/' : arguments[1];\n\t\n\t        var result = new Selector(self.__root__, self.__option__);\n\t        if (path.charAt(0) == delimiter) {\n\t          path = path.substr(1);\n\t        }\n\t\n\t        path = path.split(delimiter);\n\t\n\t        var _map2 = void 0;\n\t\n\t        var _m$length2 = self.length;var _m$result10 = new Array(_m$length2);var _m$i16 = 0,\n\t            _m$I16 = self.length;while (_m$i16 < _m$I16) {\n\t          var _nodeInfo4 = self[_m$i16];\n\t\n\t          var _m$visitor30 = void 0;\n\t\n\t          _m$visitor30 = {\n\t            value: (0, _util.getFromPathArray)(_nodeInfo4.value, path, delimiter),\n\t            path: _nodeInfo4.path.concat(path),\n\t            root: _nodeInfo4.root\n\t          };\n\t          _m$result10[_m$i16] = _m$visitor30;_m$i16++;\n\t        }_map2 = _m$result10;\n\t        var _m$input4 = _map2;\n\t\n\t        var _filter3 = void 0;\n\t\n\t        var _m$filtered3 = [];var _m$i15 = 0,\n\t            _m$I15 = _m$input4.length,\n\t            _m$val3 = void 0;while (_m$i15 < _m$I15) {\n\t          _m$val3 = _m$input4[_m$i15];if (_m$val3.value) {\n\t            _m$filtered3.push(_m$val3);\n\t          }_m$i15++;\n\t        }_filter3 = _m$filtered3;\n\t        var _m$input3 = _filter3;\n\t\n\t        var _forEach3 = void 0;\n\t\n\t        var _m$i14 = 0,\n\t            _m$I14 = _m$input3.length;while (_m$i14 < _m$I14) {\n\t          result[_m$i14] = _m$input3[_m$i14];_m$i14++;\n\t        }_forEach3;\n\t        return result;\n\t      },\n\t      resetRoot: function resetRoot() {\n\t        var result = new Selector(self.__data__, self.__option__);\n\t\n\t        var _forEach4 = void 0;\n\t\n\t        var _m$i17 = 0,\n\t            _m$I17 = self.length;while (_m$i17 < _m$I17) {\n\t          var _m$visitor31 = void 0;\n\t\n\t          var _tmp = Object.assign({}, self[_m$i17]);\n\t          _tmp.path = [];\n\t          _tmp.root = self.__data__;\n\t          result[_m$i17] = _tmp;\n\t          _m$visitor31;_m$i17++;\n\t        }_forEach4;\n\t        return result;\n\t      },\n\t\n\t      pseudoClass: {\n\t        regexpTest: function regexpTest(node, path, parent, val) {\n\t          return val.test(node);\n\t        },\n\t        equal: function equal(node, path, parent, val) {\n\t          return val === node;\n\t        }\n\t      }\n\t    },\n\t    // default private property\n\t    {\n\t      __root__: root,\n\t      __data__: root,\n\t      __option__: option\n\t    }, option);\n\t    if (root) {\n\t      _get(Object.getPrototypeOf(Selector.prototype), 'push', _this).call(_this, { value: root, path: [], root: root });\n\t    }\n\t\n\t    var errorValue = {};\n\t    // private method -----------------------------------------------------------------\n\t    function findFirstMatchNode(combinator, node) {\n\t      var result;\n\t      if (combinator.operator == ' ') {\n\t        var _depthFirstSearch2 = void 0;\n\t\n\t        _DEPTH_FIRST_SEARCH: {\n\t          var _m$traverse = function m$traverse(m$node, m$path, m$parent) {\n\t            var _m$visitor14 = void 0;\n\t\n\t            var _m$compound2 = combinator.next;\n\t\n\t            var _fatchCompoundSelector2 = void 0;\n\t\n\t            _FATCH_COMPOUND_SELECTOR: {\n\t              if (_m$compound2.element === undefined || m$path[m$path.length - 1] === _m$compound2.element.ident) {\n\t                if (_m$compound2.attributes === undefined || matchAttribute(_m$compound2.attributes, m$node)) {\n\t                  if (_m$compound2.pseudoClasses !== undefined) {\n\t                    var _m$tmp3 = findPesudoClass(_m$compound2.pseudoClasses, m$node, m$path, m$parent);\n\t                    if (_m$tmp3) {\n\t                      _fatchCompoundSelector2 = _m$tmp3;\n\t                      break _FATCH_COMPOUND_SELECTOR;\n\t                    }\n\t                  } else {\n\t                    _fatchCompoundSelector2 = [m$node, m$path, m$parent];\n\t                    break _FATCH_COMPOUND_SELECTOR;\n\t                  }\n\t                }\n\t              }\n\t\n\t              _fatchCompoundSelector2 = errorValue;\n\t            }\n\t\n\t            result = _fatchCompoundSelector2;\n\t            if (result !== errorValue) {\n\t              var _m$combinator9 = combinator.next.next;\n\t\n\t              var _fetchNextSelector9 = void 0;\n\t\n\t              _FETCH_NEXT_SELECTOR: {\n\t                if (_m$combinator9) {\n\t                  if (_typeof(result[0]) == 'object') {\n\t                    var _m$tmp4 = findFirstMatchNode(_m$combinator9, result[0]);\n\t                    if (_m$tmp4 !== errorValue) {\n\t                      result[0] = _m$tmp4[0];\n\t                      Array.prototype.push.apply(result[1], _m$tmp4[1]);\n\t                      Array.prototype.push.apply(result[2], _m$tmp4[2]);\n\t                      _fetchNextSelector9 = result;\n\t                      break _FETCH_NEXT_SELECTOR;\n\t                    }\n\t                  }\n\t\n\t                  _fetchNextSelector9 = errorValue;\n\t                  break _FETCH_NEXT_SELECTOR;\n\t                }\n\t\n\t                _fetchNextSelector9 = result;\n\t              }\n\t\n\t              result = _fetchNextSelector9;\n\t              if (result !== errorValue) {\n\t                _m$visitor14 = true;\n\t              }\n\t            }\n\t\n\t            if (_m$visitor14) {\n\t              return [m$node, m$path, m$parent];\n\t            }\n\t\n\t            if ((typeof m$node === 'undefined' ? 'undefined' : _typeof(m$node)) == 'object') {\n\t              var m$key, m$newNode, m$tmp;\n\t              m$parent = m$parent.slice();\n\t              m$parent.push(m$node);\n\t              for (m$key in m$node) {\n\t                m$newNode = m$node[m$key];\n\t                if (m$parent.indexOf(m$newNode) == -1) {\n\t                  if (m$tmp = m$traverse(m$newNode, m$path.concat(m$key), m$parent)) {\n\t                    return m$tmp;\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          };\n\t\n\t          _depthFirstSearch2 = _m$traverse(node, [], []);\n\t        }\n\t\n\t        _depthFirstSearch2;\n\t      } else if (combinator.operator == '>') {\n\t        var _m$depth3 = 1;\n\t\n\t        var _breadthFirstSearch2 = void 0;\n\t\n\t        var _m$result11;\n\t\n\t        var _m$buffer = [[node, [], []]];\n\t        var _m$tmp9, _m$node, _m$path, _m$parent;\n\t        var _m$key, _m$newNode;\n\t        while (_m$buffer.length) {\n\t          _m$tmp9 = _m$buffer.shift();\n\t          _m$node = _m$tmp9[0];\n\t          _m$path = _m$tmp9[1];\n\t          _m$parent = _m$tmp9[2];\n\t          if (_m$depth3 === undefined || _m$path.length == _m$depth3) {\n\t            var _m$visitor32 = void 0;\n\t\n\t            var _m$compound9 = combinator.next;\n\t\n\t            var _fatchCompoundSelector9 = void 0;\n\t\n\t            _FATCH_COMPOUND_SELECTOR2: {\n\t              if (_m$compound9.element === undefined || _m$path[_m$path.length - 1] === _m$compound9.element.ident) {\n\t                if (_m$compound9.attributes === undefined || matchAttribute(_m$compound9.attributes, _m$node)) {\n\t                  if (_m$compound9.pseudoClasses !== undefined) {\n\t                    var _m$tmp7 = findPesudoClass(_m$compound9.pseudoClasses, _m$node, _m$path, _m$parent);if (_m$tmp7) {\n\t                      _fatchCompoundSelector9 = _m$tmp7;\n\t                      break _FATCH_COMPOUND_SELECTOR2;\n\t                    }\n\t                  } else {\n\t                    _fatchCompoundSelector9 = [_m$node, _m$path, _m$parent];\n\t                    break _FATCH_COMPOUND_SELECTOR2;\n\t                  }\n\t                }\n\t              }_fatchCompoundSelector9 = errorValue;\n\t            }\n\t\n\t            result = _fatchCompoundSelector9;\n\t            if (result !== errorValue) {\n\t              var _m$combinator10 = combinator.next.next;\n\t\n\t              var _fetchNextSelector10 = void 0;\n\t\n\t              _FETCH_NEXT_SELECTOR2: {\n\t                if (_m$combinator10) {\n\t                  if (_typeof(result[0]) == 'object') {\n\t                    var _m$tmp8 = findFirstMatchNode(_m$combinator10, result[0]);if (_m$tmp8 !== errorValue) {\n\t                      result[0] = _m$tmp8[0];Array.prototype.push.apply(result[1], _m$tmp8[1]);Array.prototype.push.apply(result[2], _m$tmp8[2]);_fetchNextSelector10 = result;\n\t                      break _FETCH_NEXT_SELECTOR2;\n\t                    }\n\t                  }_fetchNextSelector10 = errorValue;\n\t                  break _FETCH_NEXT_SELECTOR2;\n\t                }_fetchNextSelector10 = result;\n\t              }\n\t\n\t              result = _fetchNextSelector10;\n\t              if (result !== errorValue) {\n\t                _m$visitor32 = true;\n\t              }\n\t            }\n\t\n\t            if (_m$visitor32) {\n\t              _m$result11 = [_m$node, _m$path, _m$parent];\n\t              break;\n\t            }\n\t          } else if ((typeof _m$node === 'undefined' ? 'undefined' : _typeof(_m$node)) == 'object' && (_m$depth3 === undefined || _m$path.length < _m$depth3)) {\n\t            _m$parent = _m$parent.slice();\n\t            _m$parent.push(_m$node);\n\t            for (_m$key in _m$node) {\n\t              _m$newNode = _m$node[_m$key];\n\t              if (_m$parent.indexOf(_m$newNode) == -1) {\n\t                _m$buffer.push([_m$newNode, _m$path.concat(_m$key), _m$parent]);\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        _breadthFirstSearch2 = _m$result11;\n\t\n\t        _breadthFirstSearch2;\n\t      }\n\t\n\t      return result;\n\t    }\n\t\n\t    function findMatchNode(combinator, node) {\n\t      var result = [],\n\t          tmp;\n\t      if (combinator.operator == ' ') {\n\t        var _depthFirstTraversal2 = void 0;\n\t\n\t        var _m$traverse2 = function m$traverse(m$node, m$path, m$parent) {\n\t          var _m$visitor18 = void 0;\n\t\n\t          var _m$compound6 = combinator.next;\n\t\n\t          var _fatchCompoundSelector6 = void 0;\n\t\n\t          _FATCH_COMPOUND_SELECTOR3: {\n\t            if (_m$compound6.element === undefined || m$path[m$path.length - 1] === _m$compound6.element.ident) {\n\t              if (_m$compound6.attributes === undefined || matchAttribute(_m$compound6.attributes, m$node)) {\n\t                if (_m$compound6.pseudoClasses !== undefined) {\n\t                  var _m$tmp12 = findPesudoClass(_m$compound6.pseudoClasses, m$node, m$path, m$parent);if (_m$tmp12) {\n\t                    _fatchCompoundSelector6 = _m$tmp12;\n\t                    break _FATCH_COMPOUND_SELECTOR3;\n\t                  }\n\t                } else {\n\t                  _fatchCompoundSelector6 = [m$node, m$path, m$parent];\n\t                  break _FATCH_COMPOUND_SELECTOR3;\n\t                }\n\t              }\n\t            }_fatchCompoundSelector6 = errorValue;\n\t          }\n\t\n\t          tmp = _fatchCompoundSelector6;\n\t          if (tmp !== errorValue) {\n\t            var _m$combinator11 = combinator.next.next;\n\t\n\t            var _fetchNextSelector11 = void 0;\n\t\n\t            _FETCH_NEXT_SELECTOR3: {\n\t              if (_m$combinator11) {\n\t                if (_typeof(tmp[0]) == 'object') {\n\t                  var _m$tmp13 = findMatchNode(_m$combinator11, tmp[0]);\n\t                  if (_m$tmp13 !== errorValue) {\n\t                    var _forEach11 = void 0;\n\t\n\t                    var _m$i29 = 0,\n\t                        _m$I29 = _m$tmp13.length;while (_m$i29 < _m$I29) {\n\t                      var _rec6 = _m$tmp13[_m$i29];\n\t\n\t                      var _m$visitor33 = void 0;\n\t\n\t                      Array.prototype.unshift.apply(_rec6[1], tmp[1]);\n\t                      Array.prototype.unshift.apply(_rec6[2], tmp[2]);\n\t                      _m$visitor33;_m$i29++;\n\t                    }\n\t                    _forEach11;\n\t                    _fetchNextSelector11 = _m$tmp13;\n\t                    break _FETCH_NEXT_SELECTOR3;\n\t                  }\n\t                }\n\t\n\t                _fetchNextSelector11 = errorValue;\n\t                break _FETCH_NEXT_SELECTOR3;\n\t              }\n\t\n\t              _fetchNextSelector11 = [tmp];\n\t            }\n\t\n\t            tmp = _fetchNextSelector11;\n\t            if (tmp !== errorValue) {\n\t              Array.prototype.push.apply(result, tmp);\n\t            }\n\t          }\n\t\n\t          _m$visitor18;\n\t          if ((typeof m$node === 'undefined' ? 'undefined' : _typeof(m$node)) == 'object') {\n\t            var m$key, m$newNode;\n\t            m$parent = m$parent.slice();\n\t            m$parent.push(m$node);\n\t            for (m$key in m$node) {\n\t              m$newNode = m$node[m$key];\n\t              if (m$parent.indexOf(m$newNode) == -1) {\n\t                m$traverse(m$newNode, m$path.concat(m$key), m$parent);\n\t              }\n\t            }\n\t          }\n\t        };\n\t\n\t        _m$traverse2(node, [], []);\n\t\n\t        _depthFirstTraversal2;\n\t      } else if (combinator.operator == '>') {\n\t        var _m$depth4 = 1;\n\t\n\t        var _breadthFirstTraversal2 = void 0;\n\t\n\t        var _m$buffer2 = [[node, [], []]];\n\t        var _m$tmp18, _m$node2, _m$path2, _m$parent2;\n\t        var _m$key2, _m$newNode2;\n\t        while (_m$buffer2.length) {\n\t          _m$tmp18 = _m$buffer2.shift();\n\t          _m$node2 = _m$tmp18[0];\n\t          _m$path2 = _m$tmp18[1];\n\t          _m$parent2 = _m$tmp18[2];\n\t          if (_m$depth4 === undefined || _m$path2.length == _m$depth4) {\n\t            var _m$visitor34 = void 0;\n\t\n\t            var _m$compound10 = combinator.next;\n\t\n\t            var _fatchCompoundSelector10 = void 0;\n\t\n\t            _FATCH_COMPOUND_SELECTOR4: {\n\t              if (_m$compound10.element === undefined || _m$path2[_m$path2.length - 1] === _m$compound10.element.ident) {\n\t                if (_m$compound10.attributes === undefined || matchAttribute(_m$compound10.attributes, _m$node2)) {\n\t                  if (_m$compound10.pseudoClasses !== undefined) {\n\t                    var _m$tmp16 = findPesudoClass(_m$compound10.pseudoClasses, _m$node2, _m$path2, _m$parent2);if (_m$tmp16) {\n\t                      _fatchCompoundSelector10 = _m$tmp16;\n\t                      break _FATCH_COMPOUND_SELECTOR4;\n\t                    }\n\t                  } else {\n\t                    _fatchCompoundSelector10 = [_m$node2, _m$path2, _m$parent2];\n\t                    break _FATCH_COMPOUND_SELECTOR4;\n\t                  }\n\t                }\n\t              }_fatchCompoundSelector10 = errorValue;\n\t            }\n\t\n\t            tmp = _fatchCompoundSelector10;\n\t            if (tmp !== errorValue) {\n\t              var _m$combinator12 = combinator.next.next;\n\t\n\t              var _fetchNextSelector12 = void 0;\n\t\n\t              _FETCH_NEXT_SELECTOR4: {\n\t                if (_m$combinator12) {\n\t                  if (_typeof(tmp[0]) == 'object') {\n\t                    var _m$tmp17 = findMatchNode(_m$combinator12, tmp[0]);if (_m$tmp17 !== errorValue) {\n\t                      var _forEach12 = void 0;\n\t\n\t                      var _m$i30 = 0,\n\t                          _m$I30 = _m$tmp17.length;while (_m$i30 < _m$I30) {\n\t                        var _rec7 = _m$tmp17[_m$i30];\n\t\n\t                        var _m$visitor35 = void 0;\n\t\n\t                        Array.prototype.unshift.apply(_rec7[1], tmp[1]);Array.prototype.unshift.apply(_rec7[2], tmp[2]);_m$visitor35;_m$i30++;\n\t                      }_forEach12;_fetchNextSelector12 = _m$tmp17;\n\t                      break _FETCH_NEXT_SELECTOR4;\n\t                    }\n\t                  }_fetchNextSelector12 = errorValue;\n\t                  break _FETCH_NEXT_SELECTOR4;\n\t                }_fetchNextSelector12 = [tmp];\n\t              }\n\t\n\t              tmp = _fetchNextSelector12;\n\t              if (tmp !== errorValue) {\n\t                Array.prototype.push.apply(result, tmp);\n\t              }\n\t            }\n\t\n\t            _m$visitor34;\n\t          }\n\t          if ((typeof _m$node2 === 'undefined' ? 'undefined' : _typeof(_m$node2)) == 'object' && (_m$depth4 === undefined || _m$path2.length < _m$depth4)) {\n\t            _m$parent2 = _m$parent2.slice();\n\t            _m$parent2.push(_m$node2);\n\t            for (_m$key2 in _m$node2) {\n\t              _m$newNode2 = _m$node2[_m$key2];\n\t              if (_m$parent2.indexOf(_m$newNode2) == -1) {\n\t                _m$buffer2.push([_m$newNode2, _m$path2.concat(_m$key2), _m$parent2]);\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        _breadthFirstTraversal2;\n\t      }\n\t\n\t      return result;\n\t    }\n\t\n\t    function matchAttribute(attrSelectors, node) {\n\t      var _every4 = void 0;\n\t\n\t      var _m$result12 = true;var _m$i23 = 0,\n\t          _m$I23 = attrSelectors.length;while (_m$i23 < _m$I23) {\n\t        var _attrSelector2 = attrSelectors[_m$i23];\n\t\n\t        var _m$visitor36 = void 0;\n\t\n\t        _M$VISITOR16: {\n\t          if (_attrSelector2.type == 'Id') {\n\t            _m$visitor36 = node && (node.ID == _attrSelector2.ident || node.Id == _attrSelector2.ident || node.id == _attrSelector2.ident);\n\t            break _M$VISITOR16;\n\t          } else if (_attrSelector2.type == 'Class') {\n\t            _m$visitor36 = node && scope.constructor.name == _attrSelector2.ident;\n\t            break _M$VISITOR16;\n\t          }\n\t\n\t          _m$visitor36 = false;\n\t        }\n\t\n\t        if (!_m$visitor36) {\n\t          _m$result12 = false;break;\n\t        }_m$i23++;\n\t      }_every4 = _m$result12;\n\t\n\t      return _every4;\n\t    }\n\t\n\t    function findPesudoClass(pseudoClasses, node, path, parent) {\n\t      var result, tmp;\n\t\n\t      var _every5 = void 0;\n\t\n\t      var _m$result13 = true;var _m$i24 = 0,\n\t          _m$I24 = pseudoClasses.length;while (_m$i24 < _m$I24) {\n\t        var _pseudoClass2 = pseudoClasses[_m$i24];\n\t\n\t        var _m$visitor37 = void 0;\n\t\n\t        _M$VISITOR17: {\n\t          var _pseudoClassMethod = self.pseudoClass[_pseudoClass2.ident];\n\t          var _pseudoClassArgs = [node, path, parent];\n\t          if (_pseudoClass2.args) {\n\t            _pseudoClassArgs = _pseudoClassArgs.concat(_pseudoClass2.args);\n\t          }\n\t\n\t          var _tmp2 = _pseudoClassMethod.apply(self, _pseudoClassArgs);\n\t          if (!_tmp2) {\n\t            _m$visitor37 = false;\n\t            break _M$VISITOR17;\n\t          } else if (_tmp2 instanceof Array) {\n\t            node = _tmp2[0];\n\t            path = _tmp2[1];\n\t            parent = _tmp2[2];\n\t          }\n\t\n\t          _m$visitor37 = true;\n\t        }\n\t\n\t        if (!_m$visitor37) {\n\t          _m$result13 = false;break;\n\t        }_m$i24++;\n\t      }_every5 = _m$result13;\n\t      result = _every5;\n\t\n\t      return result ? [node, path, parent] : false;\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  return Selector;\n\t}(Array);\n\t\n\texports.default = Selector;\n\t;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = (function() {\n\t  \"use strict\";\n\t\n\t  /*\n\t   * Generated by PEG.js 0.9.0.\n\t   *\n\t   * http://pegjs.org/\n\t   */\n\t\n\t  function peg$subclass(child, parent) {\n\t    function ctor() { this.constructor = child; }\n\t    ctor.prototype = parent.prototype;\n\t    child.prototype = new ctor();\n\t  }\n\t\n\t  function peg$SyntaxError(message, expected, found, location) {\n\t    this.message  = message;\n\t    this.expected = expected;\n\t    this.found    = found;\n\t    this.location = location;\n\t    this.name     = \"SyntaxError\";\n\t\n\t    if (typeof Error.captureStackTrace === \"function\") {\n\t      Error.captureStackTrace(this, peg$SyntaxError);\n\t    }\n\t  }\n\t\n\t  peg$subclass(peg$SyntaxError, Error);\n\t\n\t  function peg$parse(input) {\n\t    var options = arguments.length > 1 ? arguments[1] : {},\n\t        parser  = this,\n\t\n\t        peg$FAILED = {},\n\t\n\t        peg$startRuleFunctions = { scope_relative_selector_list: peg$parsescope_relative_selector_list },\n\t        peg$startRuleFunction  = peg$parsescope_relative_selector_list,\n\t\n\t        peg$c0 = \",\",\n\t        peg$c1 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n\t        peg$c2 = function(first, next) {\r\n\t            var result = [first];\r\n\t            for (var i in next) {\r\n\t              result.push(next[i][2]);\r\n\t            }\r\n\t\r\n\t            return result;\r\n\t          },\n\t        peg$c3 = function(first_comb, first_comp, more) {\r\n\t            var result = [];\r\n\t            for (var i in more) {\r\n\t              var item = more[i];\r\n\t              result.push(item[0], item[1]);\r\n\t            }\r\n\t\r\n\t            result.unshift(first_comp);\r\n\t\r\n\t            if (first_comb) {\r\n\t              result.unshift(first_comb);\r\n\t            } else {\r\n\t              result.unshift(new Combinator(\" \"));\r\n\t            }\r\n\t\r\n\t            return new Selector(result);\r\n\t          },\n\t        peg$c4 = \">\",\n\t        peg$c5 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n\t        peg$c6 = function() {\r\n\t            return new Combinator(text().trim());\r\n\t          },\n\t        peg$c7 = function() {\r\n\t            return new Combinator(\" \");\r\n\t          },\n\t        peg$c8 = function(pseudo_class) {\r\n\t            return new Compound(undefined, undefined, pseudo_class);\r\n\t          },\n\t        peg$c9 = function(compound, pseudo_class) {\r\n\t            return new Compound(compound[0], compound[1], pseudo_class);\r\n\t          },\n\t        peg$c10 = function(compound, pseudo_class) {\r\n\t            return new Compound(undefined, compound, pseudo_class);\r\n\t          },\n\t        peg$c11 = \"*\",\n\t        peg$c12 = { type: \"literal\", value: \"*\", description: \"\\\"*\\\"\" },\n\t        peg$c13 = function(prop) {\r\n\t            return new Prop(prop);\r\n\t          },\n\t        peg$c14 = \"#\",\n\t        peg$c15 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n\t        peg$c16 = function(val) {\r\n\t            return new Id(val);\r\n\t          },\n\t        peg$c17 = \".\",\n\t        peg$c18 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n\t        peg$c19 = function(val) {\r\n\t            return new Class(val);\r\n\t          },\n\t        peg$c20 = \":\",\n\t        peg$c21 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n\t        peg$c22 = \"(\",\n\t        peg$c23 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n\t        peg$c24 = \")\",\n\t        peg$c25 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n\t        peg$c26 = function(ident, val) {\r\n\t            if (val) {\r\n\t              var tmp = [];\r\n\t              tmp.push(val[2]);\r\n\t              for (var i in val[4]) {\r\n\t                tmp.push(val[4][i][2]);\r\n\t              }\r\n\t\r\n\t              val = tmp;\r\n\t            }\r\n\t\r\n\t            return new PseudoClass(ident, val);\r\n\t          },\n\t        peg$c27 = /^[$_A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n\t        peg$c28 = { type: \"class\", value: \"[$_\\\\u0041-\\\\u005a\\\\u0061-\\\\u007a\\\\u00aa\\\\u00b5\\\\u00ba\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u037f\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u048a-\\\\u052f\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0620-\\\\u064a\\\\u066e\\\\u066f\\\\u0671-\\\\u06d3\\\\u06d5\\\\u06e5\\\\u06e6\\\\u06ee\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff\\\\u0710\\\\u0712-\\\\u072f\\\\u074d-\\\\u07a5\\\\u07b1\\\\u07ca-\\\\u07ea\\\\u07f4\\\\u07f5\\\\u07fa\\\\u0800-\\\\u0815\\\\u081a\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08a0-\\\\u08b4\\\\u0904-\\\\u0939\\\\u093d\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bd\\\\u09ce\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e1\\\\u09f0\\\\u09f1\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a72-\\\\u0a74\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abd\\\\u0ad0\\\\u0ae0\\\\u0ae1\\\\u0af9\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3d\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b61\\\\u0b71\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bd0\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c39\\\\u0c3d\\\\u0c58-\\\\u0c5a\\\\u0c60\\\\u0c61\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbd\\\\u0cde\\\\u0ce0\\\\u0ce1\\\\u0cf1\\\\u0cf2\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d\\\\u0d4e\\\\u0d5f-\\\\u0d61\\\\u0d7a-\\\\u0d7f\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0e01-\\\\u0e30\\\\u0e32\\\\u0e33\\\\u0e40-\\\\u0e46\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb0\\\\u0eb2\\\\u0eb3\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f40-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f88-\\\\u0f8c\\\\u1000-\\\\u102a\\\\u103f\\\\u1050-\\\\u1055\\\\u105a-\\\\u105d\\\\u1061\\\\u1065\\\\u1066\\\\u106e-\\\\u1070\\\\u1075-\\\\u1081\\\\u108e\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f5\\\\u13f8-\\\\u13fd\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16ee-\\\\u16f8\\\\u1700-\\\\u170c\\\\u170e-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1780-\\\\u17b3\\\\u17d7\\\\u17dc\\\\u1820-\\\\u1877\\\\u1880-\\\\u18a8\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191e\\\\u1950-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19b0-\\\\u19c9\\\\u1a00-\\\\u1a16\\\\u1a20-\\\\u1a54\\\\u1aa7\\\\u1b05-\\\\u1b33\\\\u1b45-\\\\u1b4b\\\\u1b83-\\\\u1ba0\\\\u1bae\\\\u1baf\\\\u1bba-\\\\u1be5\\\\u1c00-\\\\u1c23\\\\u1c4d-\\\\u1c4f\\\\u1c5a-\\\\u1c7d\\\\u1ce9-\\\\u1cec\\\\u1cee-\\\\u1cf1\\\\u1cf5\\\\u1cf6\\\\u1d00-\\\\u1dbf\\\\u1e00-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2160-\\\\u2188\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cee\\\\u2cf2\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d80-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2e2f\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303c\\\\u3041-\\\\u3096\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400\\\\u4db5\\\\u4e00\\\\u9fd5\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua61f\\\\ua62a\\\\ua62b\\\\ua640-\\\\ua66e\\\\ua67f-\\\\ua69d\\\\ua6a0-\\\\ua6ef\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua7ad\\\\ua7b0-\\\\ua7b7\\\\ua7f7-\\\\ua801\\\\ua803-\\\\ua805\\\\ua807-\\\\ua80a\\\\ua80c-\\\\ua822\\\\ua840-\\\\ua873\\\\ua882-\\\\ua8b3\\\\ua8f2-\\\\ua8f7\\\\ua8fb\\\\ua8fd\\\\ua90a-\\\\ua925\\\\ua930-\\\\ua946\\\\ua960-\\\\ua97c\\\\ua984-\\\\ua9b2\\\\ua9cf\\\\ua9e0-\\\\ua9e4\\\\ua9e6-\\\\ua9ef\\\\ua9fa-\\\\ua9fe\\\\uaa00-\\\\uaa28\\\\uaa40-\\\\uaa42\\\\uaa44-\\\\uaa4b\\\\uaa60-\\\\uaa76\\\\uaa7a\\\\uaa7e-\\\\uaaaf\\\\uaab1\\\\uaab5\\\\uaab6\\\\uaab9-\\\\uaabd\\\\uaac0\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaea\\\\uaaf2-\\\\uaaf4\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uab30-\\\\uab5a\\\\uab5c-\\\\uab65\\\\uab70-\\\\uabe2\\\\uac00\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d\\\\ufb1f-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]\", description: \"[$_\\\\u0041-\\\\u005a\\\\u0061-\\\\u007a\\\\u00aa\\\\u00b5\\\\u00ba\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u037f\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u048a-\\\\u052f\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0620-\\\\u064a\\\\u066e\\\\u066f\\\\u0671-\\\\u06d3\\\\u06d5\\\\u06e5\\\\u06e6\\\\u06ee\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff\\\\u0710\\\\u0712-\\\\u072f\\\\u074d-\\\\u07a5\\\\u07b1\\\\u07ca-\\\\u07ea\\\\u07f4\\\\u07f5\\\\u07fa\\\\u0800-\\\\u0815\\\\u081a\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08a0-\\\\u08b4\\\\u0904-\\\\u0939\\\\u093d\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bd\\\\u09ce\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e1\\\\u09f0\\\\u09f1\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a72-\\\\u0a74\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abd\\\\u0ad0\\\\u0ae0\\\\u0ae1\\\\u0af9\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3d\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b61\\\\u0b71\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bd0\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c39\\\\u0c3d\\\\u0c58-\\\\u0c5a\\\\u0c60\\\\u0c61\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbd\\\\u0cde\\\\u0ce0\\\\u0ce1\\\\u0cf1\\\\u0cf2\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d\\\\u0d4e\\\\u0d5f-\\\\u0d61\\\\u0d7a-\\\\u0d7f\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0e01-\\\\u0e30\\\\u0e32\\\\u0e33\\\\u0e40-\\\\u0e46\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb0\\\\u0eb2\\\\u0eb3\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f40-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f88-\\\\u0f8c\\\\u1000-\\\\u102a\\\\u103f\\\\u1050-\\\\u1055\\\\u105a-\\\\u105d\\\\u1061\\\\u1065\\\\u1066\\\\u106e-\\\\u1070\\\\u1075-\\\\u1081\\\\u108e\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f5\\\\u13f8-\\\\u13fd\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16ee-\\\\u16f8\\\\u1700-\\\\u170c\\\\u170e-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1780-\\\\u17b3\\\\u17d7\\\\u17dc\\\\u1820-\\\\u1877\\\\u1880-\\\\u18a8\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191e\\\\u1950-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19b0-\\\\u19c9\\\\u1a00-\\\\u1a16\\\\u1a20-\\\\u1a54\\\\u1aa7\\\\u1b05-\\\\u1b33\\\\u1b45-\\\\u1b4b\\\\u1b83-\\\\u1ba0\\\\u1bae\\\\u1baf\\\\u1bba-\\\\u1be5\\\\u1c00-\\\\u1c23\\\\u1c4d-\\\\u1c4f\\\\u1c5a-\\\\u1c7d\\\\u1ce9-\\\\u1cec\\\\u1cee-\\\\u1cf1\\\\u1cf5\\\\u1cf6\\\\u1d00-\\\\u1dbf\\\\u1e00-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2160-\\\\u2188\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cee\\\\u2cf2\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d80-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2e2f\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303c\\\\u3041-\\\\u3096\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400\\\\u4db5\\\\u4e00\\\\u9fd5\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua61f\\\\ua62a\\\\ua62b\\\\ua640-\\\\ua66e\\\\ua67f-\\\\ua69d\\\\ua6a0-\\\\ua6ef\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua7ad\\\\ua7b0-\\\\ua7b7\\\\ua7f7-\\\\ua801\\\\ua803-\\\\ua805\\\\ua807-\\\\ua80a\\\\ua80c-\\\\ua822\\\\ua840-\\\\ua873\\\\ua882-\\\\ua8b3\\\\ua8f2-\\\\ua8f7\\\\ua8fb\\\\ua8fd\\\\ua90a-\\\\ua925\\\\ua930-\\\\ua946\\\\ua960-\\\\ua97c\\\\ua984-\\\\ua9b2\\\\ua9cf\\\\ua9e0-\\\\ua9e4\\\\ua9e6-\\\\ua9ef\\\\ua9fa-\\\\ua9fe\\\\uaa00-\\\\uaa28\\\\uaa40-\\\\uaa42\\\\uaa44-\\\\uaa4b\\\\uaa60-\\\\uaa76\\\\uaa7a\\\\uaa7e-\\\\uaaaf\\\\uaab1\\\\uaab5\\\\uaab6\\\\uaab9-\\\\uaabd\\\\uaac0\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaea\\\\uaaf2-\\\\uaaf4\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uab30-\\\\uab5a\\\\uab5c-\\\\uab65\\\\uab70-\\\\uabe2\\\\uac00\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d\\\\ufb1f-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]\" },\n\t        peg$c29 = /^[$_\\u200C\\u200D0-9A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n\t        peg$c30 = { type: \"class\", value: \"[$_\\\\u200c\\\\u200d\\\\u0030-\\\\u0039\\\\u0041-\\\\u005a\\\\u005f\\\\u0061-\\\\u007a\\\\u00aa\\\\u00b5\\\\u00ba\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0300-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u037f\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u0483-\\\\u0487\\\\u048a-\\\\u052f\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u0591-\\\\u05bd\\\\u05bf\\\\u05c1\\\\u05c2\\\\u05c4\\\\u05c5\\\\u05c7\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0610-\\\\u061a\\\\u0620-\\\\u0669\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc\\\\u06df-\\\\u06e8\\\\u06ea-\\\\u06fc\\\\u06ff\\\\u0710-\\\\u074a\\\\u074d-\\\\u07b1\\\\u07c0-\\\\u07f5\\\\u07fa\\\\u0800-\\\\u082d\\\\u0840-\\\\u085b\\\\u08a0-\\\\u08b4\\\\u08e3-\\\\u0963\\\\u0966-\\\\u096f\\\\u0971-\\\\u0983\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bc-\\\\u09c4\\\\u09c7\\\\u09c8\\\\u09cb-\\\\u09ce\\\\u09d7\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e3\\\\u09e6-\\\\u09f1\\\\u0a01-\\\\u0a03\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a3c\\\\u0a3e-\\\\u0a42\\\\u0a47\\\\u0a48\\\\u0a4b-\\\\u0a4d\\\\u0a51\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a66-\\\\u0a75\\\\u0a81-\\\\u0a83\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abc-\\\\u0ac5\\\\u0ac7-\\\\u0ac9\\\\u0acb-\\\\u0acd\\\\u0ad0\\\\u0ae0-\\\\u0ae3\\\\u0ae6-\\\\u0aef\\\\u0af9\\\\u0b01-\\\\u0b03\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3c-\\\\u0b44\\\\u0b47\\\\u0b48\\\\u0b4b-\\\\u0b4d\\\\u0b56\\\\u0b57\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b63\\\\u0b66-\\\\u0b6f\\\\u0b71\\\\u0b82\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bbe-\\\\u0bc2\\\\u0bc6-\\\\u0bc8\\\\u0bca-\\\\u0bcd\\\\u0bd0\\\\u0bd7\\\\u0be6-\\\\u0bef\\\\u0c00-\\\\u0c03\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c39\\\\u0c3d-\\\\u0c44\\\\u0c46-\\\\u0c48\\\\u0c4a-\\\\u0c4d\\\\u0c55\\\\u0c56\\\\u0c58-\\\\u0c5a\\\\u0c60-\\\\u0c63\\\\u0c66-\\\\u0c6f\\\\u0c81-\\\\u0c83\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbc-\\\\u0cc4\\\\u0cc6-\\\\u0cc8\\\\u0cca-\\\\u0ccd\\\\u0cd5\\\\u0cd6\\\\u0cde\\\\u0ce0-\\\\u0ce3\\\\u0ce6-\\\\u0cef\\\\u0cf1\\\\u0cf2\\\\u0d01-\\\\u0d03\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d-\\\\u0d44\\\\u0d46-\\\\u0d48\\\\u0d4a-\\\\u0d4e\\\\u0d57\\\\u0d5f-\\\\u0d63\\\\u0d66-\\\\u0d6f\\\\u0d7a-\\\\u0d7f\\\\u0d82\\\\u0d83\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0dca\\\\u0dcf-\\\\u0dd4\\\\u0dd6\\\\u0dd8-\\\\u0ddf\\\\u0de6-\\\\u0def\\\\u0df2\\\\u0df3\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e\\\\u0e50-\\\\u0e59\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb9\\\\u0ebb-\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0ec8-\\\\u0ecd\\\\u0ed0-\\\\u0ed9\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f18\\\\u0f19\\\\u0f20-\\\\u0f29\\\\u0f35\\\\u0f37\\\\u0f39\\\\u0f3e-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f71-\\\\u0f84\\\\u0f86-\\\\u0f97\\\\u0f99-\\\\u0fbc\\\\u0fc6\\\\u1000-\\\\u1049\\\\u1050-\\\\u109d\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u135d-\\\\u135f\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f5\\\\u13f8-\\\\u13fd\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16ee-\\\\u16f8\\\\u1700-\\\\u170c\\\\u170e-\\\\u1714\\\\u1720-\\\\u1734\\\\u1740-\\\\u1753\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1772\\\\u1773\\\\u1780-\\\\u17d3\\\\u17d7\\\\u17dc\\\\u17dd\\\\u17e0-\\\\u17e9\\\\u180b-\\\\u180d\\\\u1810-\\\\u1819\\\\u1820-\\\\u1877\\\\u1880-\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191e\\\\u1920-\\\\u192b\\\\u1930-\\\\u193b\\\\u1946-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19b0-\\\\u19c9\\\\u19d0-\\\\u19d9\\\\u1a00-\\\\u1a1b\\\\u1a20-\\\\u1a5e\\\\u1a60-\\\\u1a7c\\\\u1a7f-\\\\u1a89\\\\u1a90-\\\\u1a99\\\\u1aa7\\\\u1ab0-\\\\u1abd\\\\u1b00-\\\\u1b4b\\\\u1b50-\\\\u1b59\\\\u1b6b-\\\\u1b73\\\\u1b80-\\\\u1bf3\\\\u1c00-\\\\u1c37\\\\u1c40-\\\\u1c49\\\\u1c4d-\\\\u1c7d\\\\u1cd0-\\\\u1cd2\\\\u1cd4-\\\\u1cf6\\\\u1cf8\\\\u1cf9\\\\u1d00-\\\\u1df5\\\\u1dfc-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u203f\\\\u2040\\\\u2054\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u20d0-\\\\u20dc\\\\u20e1\\\\u20e5-\\\\u20f0\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2160-\\\\u2188\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d7f-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2de0-\\\\u2dff\\\\u2e2f\\\\u3005-\\\\u3007\\\\u3021-\\\\u302f\\\\u3031-\\\\u3035\\\\u3038-\\\\u303c\\\\u3041-\\\\u3096\\\\u3099\\\\u309a\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400\\\\u4db5\\\\u4e00\\\\u9fd5\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua62b\\\\ua640-\\\\ua66f\\\\ua674-\\\\ua67d\\\\ua67f-\\\\ua6f1\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua7ad\\\\ua7b0-\\\\ua7b7\\\\ua7f7-\\\\ua827\\\\ua840-\\\\ua873\\\\ua880-\\\\ua8c4\\\\ua8d0-\\\\ua8d9\\\\ua8e0-\\\\ua8f7\\\\ua8fb\\\\ua8fd\\\\ua900-\\\\ua92d\\\\ua930-\\\\ua953\\\\ua960-\\\\ua97c\\\\ua980-\\\\ua9c0\\\\ua9cf-\\\\ua9d9\\\\ua9e0-\\\\ua9fe\\\\uaa00-\\\\uaa36\\\\uaa40-\\\\uaa4d\\\\uaa50-\\\\uaa59\\\\uaa60-\\\\uaa76\\\\uaa7a-\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaef\\\\uaaf2-\\\\uaaf6\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uab30-\\\\uab5a\\\\uab5c-\\\\uab65\\\\uab70-\\\\uabea\\\\uabec\\\\uabed\\\\uabf0-\\\\uabf9\\\\uac00\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe00-\\\\ufe0f\\\\ufe20-\\\\ufe2f\\\\ufe33\\\\ufe34\\\\ufe4d-\\\\ufe4f\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff10-\\\\uff19\\\\uff21-\\\\uff3a\\\\uff3f\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]\", description: \"[$_\\\\u200c\\\\u200d\\\\u0030-\\\\u0039\\\\u0041-\\\\u005a\\\\u005f\\\\u0061-\\\\u007a\\\\u00aa\\\\u00b5\\\\u00ba\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0300-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u037f\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u0483-\\\\u0487\\\\u048a-\\\\u052f\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u0591-\\\\u05bd\\\\u05bf\\\\u05c1\\\\u05c2\\\\u05c4\\\\u05c5\\\\u05c7\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0610-\\\\u061a\\\\u0620-\\\\u0669\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc\\\\u06df-\\\\u06e8\\\\u06ea-\\\\u06fc\\\\u06ff\\\\u0710-\\\\u074a\\\\u074d-\\\\u07b1\\\\u07c0-\\\\u07f5\\\\u07fa\\\\u0800-\\\\u082d\\\\u0840-\\\\u085b\\\\u08a0-\\\\u08b4\\\\u08e3-\\\\u0963\\\\u0966-\\\\u096f\\\\u0971-\\\\u0983\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bc-\\\\u09c4\\\\u09c7\\\\u09c8\\\\u09cb-\\\\u09ce\\\\u09d7\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e3\\\\u09e6-\\\\u09f1\\\\u0a01-\\\\u0a03\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a3c\\\\u0a3e-\\\\u0a42\\\\u0a47\\\\u0a48\\\\u0a4b-\\\\u0a4d\\\\u0a51\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a66-\\\\u0a75\\\\u0a81-\\\\u0a83\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abc-\\\\u0ac5\\\\u0ac7-\\\\u0ac9\\\\u0acb-\\\\u0acd\\\\u0ad0\\\\u0ae0-\\\\u0ae3\\\\u0ae6-\\\\u0aef\\\\u0af9\\\\u0b01-\\\\u0b03\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3c-\\\\u0b44\\\\u0b47\\\\u0b48\\\\u0b4b-\\\\u0b4d\\\\u0b56\\\\u0b57\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b63\\\\u0b66-\\\\u0b6f\\\\u0b71\\\\u0b82\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bbe-\\\\u0bc2\\\\u0bc6-\\\\u0bc8\\\\u0bca-\\\\u0bcd\\\\u0bd0\\\\u0bd7\\\\u0be6-\\\\u0bef\\\\u0c00-\\\\u0c03\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c39\\\\u0c3d-\\\\u0c44\\\\u0c46-\\\\u0c48\\\\u0c4a-\\\\u0c4d\\\\u0c55\\\\u0c56\\\\u0c58-\\\\u0c5a\\\\u0c60-\\\\u0c63\\\\u0c66-\\\\u0c6f\\\\u0c81-\\\\u0c83\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbc-\\\\u0cc4\\\\u0cc6-\\\\u0cc8\\\\u0cca-\\\\u0ccd\\\\u0cd5\\\\u0cd6\\\\u0cde\\\\u0ce0-\\\\u0ce3\\\\u0ce6-\\\\u0cef\\\\u0cf1\\\\u0cf2\\\\u0d01-\\\\u0d03\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d-\\\\u0d44\\\\u0d46-\\\\u0d48\\\\u0d4a-\\\\u0d4e\\\\u0d57\\\\u0d5f-\\\\u0d63\\\\u0d66-\\\\u0d6f\\\\u0d7a-\\\\u0d7f\\\\u0d82\\\\u0d83\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0dca\\\\u0dcf-\\\\u0dd4\\\\u0dd6\\\\u0dd8-\\\\u0ddf\\\\u0de6-\\\\u0def\\\\u0df2\\\\u0df3\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e\\\\u0e50-\\\\u0e59\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb9\\\\u0ebb-\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0ec8-\\\\u0ecd\\\\u0ed0-\\\\u0ed9\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f18\\\\u0f19\\\\u0f20-\\\\u0f29\\\\u0f35\\\\u0f37\\\\u0f39\\\\u0f3e-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f71-\\\\u0f84\\\\u0f86-\\\\u0f97\\\\u0f99-\\\\u0fbc\\\\u0fc6\\\\u1000-\\\\u1049\\\\u1050-\\\\u109d\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u135d-\\\\u135f\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f5\\\\u13f8-\\\\u13fd\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16ee-\\\\u16f8\\\\u1700-\\\\u170c\\\\u170e-\\\\u1714\\\\u1720-\\\\u1734\\\\u1740-\\\\u1753\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1772\\\\u1773\\\\u1780-\\\\u17d3\\\\u17d7\\\\u17dc\\\\u17dd\\\\u17e0-\\\\u17e9\\\\u180b-\\\\u180d\\\\u1810-\\\\u1819\\\\u1820-\\\\u1877\\\\u1880-\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191e\\\\u1920-\\\\u192b\\\\u1930-\\\\u193b\\\\u1946-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19b0-\\\\u19c9\\\\u19d0-\\\\u19d9\\\\u1a00-\\\\u1a1b\\\\u1a20-\\\\u1a5e\\\\u1a60-\\\\u1a7c\\\\u1a7f-\\\\u1a89\\\\u1a90-\\\\u1a99\\\\u1aa7\\\\u1ab0-\\\\u1abd\\\\u1b00-\\\\u1b4b\\\\u1b50-\\\\u1b59\\\\u1b6b-\\\\u1b73\\\\u1b80-\\\\u1bf3\\\\u1c00-\\\\u1c37\\\\u1c40-\\\\u1c49\\\\u1c4d-\\\\u1c7d\\\\u1cd0-\\\\u1cd2\\\\u1cd4-\\\\u1cf6\\\\u1cf8\\\\u1cf9\\\\u1d00-\\\\u1df5\\\\u1dfc-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u203f\\\\u2040\\\\u2054\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u20d0-\\\\u20dc\\\\u20e1\\\\u20e5-\\\\u20f0\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2160-\\\\u2188\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d7f-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2de0-\\\\u2dff\\\\u2e2f\\\\u3005-\\\\u3007\\\\u3021-\\\\u302f\\\\u3031-\\\\u3035\\\\u3038-\\\\u303c\\\\u3041-\\\\u3096\\\\u3099\\\\u309a\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400\\\\u4db5\\\\u4e00\\\\u9fd5\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua62b\\\\ua640-\\\\ua66f\\\\ua674-\\\\ua67d\\\\ua67f-\\\\ua6f1\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua7ad\\\\ua7b0-\\\\ua7b7\\\\ua7f7-\\\\ua827\\\\ua840-\\\\ua873\\\\ua880-\\\\ua8c4\\\\ua8d0-\\\\ua8d9\\\\ua8e0-\\\\ua8f7\\\\ua8fb\\\\ua8fd\\\\ua900-\\\\ua92d\\\\ua930-\\\\ua953\\\\ua960-\\\\ua97c\\\\ua980-\\\\ua9c0\\\\ua9cf-\\\\ua9d9\\\\ua9e0-\\\\ua9fe\\\\uaa00-\\\\uaa36\\\\uaa40-\\\\uaa4d\\\\uaa50-\\\\uaa59\\\\uaa60-\\\\uaa76\\\\uaa7a-\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaef\\\\uaaf2-\\\\uaaf6\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uab30-\\\\uab5a\\\\uab5c-\\\\uab65\\\\uab70-\\\\uabea\\\\uabec\\\\uabed\\\\uabf0-\\\\uabf9\\\\uac00\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe00-\\\\ufe0f\\\\ufe20-\\\\ufe2f\\\\ufe33\\\\ufe34\\\\ufe4d-\\\\ufe4f\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff10-\\\\uff19\\\\uff21-\\\\uff3a\\\\uff3f\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]\" },\n\t        peg$c31 = function() {\r\n\t            return text();\r\n\t          },\n\t        peg$c32 = \"/\",\n\t        peg$c33 = { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n\t        peg$c34 = \"\\\\\",\n\t        peg$c35 = { type: \"literal\", value: \"\\\\\", description: \"\\\"\\\\\\\\\\\"\" },\n\t        peg$c36 = { type: \"any\", description: \"any character\" },\n\t        peg$c37 = /^[^\\/\\\\]/,\n\t        peg$c38 = { type: \"class\", value: \"[^/\\\\\\\\]\", description: \"[^/\\\\\\\\]\" },\n\t        peg$c39 = /^[A-Za-z]/,\n\t        peg$c40 = { type: \"class\", value: \"[A-Za-z]\", description: \"[A-Za-z]\" },\n\t        peg$c41 = function(source, flag) {\r\n\t            var src = '', item;\r\n\t            for (var i in source) {\r\n\t              item = source[i];\r\n\t              src = src + (item instanceof Array?item.join(''):item);\r\n\t            }\r\n\t\r\n\t            return new RegExp(src, flag.join(''));\r\n\t          },\n\t        peg$c42 = function() {\r\n\t            return eval(text());\r\n\t          },\n\t        peg$c43 = \"\\\"\",\n\t        peg$c44 = { type: \"literal\", value: \"\\\"\", description: \"\\\"\\\\\\\"\\\"\" },\n\t        peg$c45 = /^[^\"\\\\]/,\n\t        peg$c46 = { type: \"class\", value: \"[^\\\"\\\\\\\\]\", description: \"[^\\\"\\\\\\\\]\" },\n\t        peg$c47 = \"'\",\n\t        peg$c48 = { type: \"literal\", value: \"'\", description: \"\\\"'\\\"\" },\n\t        peg$c49 = /^[^'\\\\]/,\n\t        peg$c50 = { type: \"class\", value: \"[^'\\\\\\\\]\", description: \"[^'\\\\\\\\]\" },\n\t        peg$c51 = function(sign, val) {\r\n\t            return (sign=='-')?-val:val;\r\n\t          },\n\t        peg$c52 = \"NaN\",\n\t        peg$c53 = { type: \"literal\", value: \"NaN\", description: \"\\\"NaN\\\"\" },\n\t        peg$c54 = function() {\r\n\t            return NaN;\r\n\t          },\n\t        peg$c55 = \"Infinity\",\n\t        peg$c56 = { type: \"literal\", value: \"Infinity\", description: \"\\\"Infinity\\\"\" },\n\t        peg$c57 = function() {\r\n\t            return Infinity;\r\n\t          },\n\t        peg$c58 = \"0\",\n\t        peg$c59 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n\t        peg$c60 = /^[Bb]/,\n\t        peg$c61 = { type: \"class\", value: \"[Bb]\", description: \"[Bb]\" },\n\t        peg$c62 = /^[01]/,\n\t        peg$c63 = { type: \"class\", value: \"[01]\", description: \"[01]\" },\n\t        peg$c64 = function() {\r\n\t            return Number(text());\r\n\t          },\n\t        peg$c65 = /^[Oo]/,\n\t        peg$c66 = { type: \"class\", value: \"[Oo]\", description: \"[Oo]\" },\n\t        peg$c67 = /^[0-7]/,\n\t        peg$c68 = { type: \"class\", value: \"[0-7]\", description: \"[0-7]\" },\n\t        peg$c69 = /^[Xx]/,\n\t        peg$c70 = { type: \"class\", value: \"[Xx]\", description: \"[Xx]\" },\n\t        peg$c71 = /^[0-9A-Fa-f]/,\n\t        peg$c72 = { type: \"class\", value: \"[0-9A-Fa-f]\", description: \"[0-9A-Fa-f]\" },\n\t        peg$c73 = /^[0-9]/,\n\t        peg$c74 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n\t        peg$c75 = function() {\r\n\t            var val = text();\r\n\t            if ( /^0[0-7]+$/.test(val) ) {\r\n\t              val = val.charAt(0) + 'O' + val.substr(1);\r\n\t            }\r\n\t\r\n\t            return Number(val);\r\n\t          },\n\t        peg$c76 = \"e\",\n\t        peg$c77 = { type: \"literal\", value: \"e\", description: \"\\\"e\\\"\" },\n\t        peg$c78 = /^[+\\-]/,\n\t        peg$c79 = { type: \"class\", value: \"[+-]\", description: \"[+-]\" },\n\t        peg$c80 = /^[ \\t\\r\\n\\f]/,\n\t        peg$c81 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n\\\\f]\", description: \"[ \\\\t\\\\r\\\\n\\\\f]\" },\n\t\n\t        peg$currPos          = 0,\n\t        peg$savedPos         = 0,\n\t        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\n\t        peg$maxFailPos       = 0,\n\t        peg$maxFailExpected  = [],\n\t        peg$silentFails      = 0,\n\t\n\t        peg$result;\n\t\n\t    if (\"startRule\" in options) {\n\t      if (!(options.startRule in peg$startRuleFunctions)) {\n\t        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n\t      }\n\t\n\t      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n\t    }\n\t\n\t    function text() {\n\t      return input.substring(peg$savedPos, peg$currPos);\n\t    }\n\t\n\t    function location() {\n\t      return peg$computeLocation(peg$savedPos, peg$currPos);\n\t    }\n\t\n\t    function expected(description) {\n\t      throw peg$buildException(\n\t        null,\n\t        [{ type: \"other\", description: description }],\n\t        input.substring(peg$savedPos, peg$currPos),\n\t        peg$computeLocation(peg$savedPos, peg$currPos)\n\t      );\n\t    }\n\t\n\t    function error(message) {\n\t      throw peg$buildException(\n\t        message,\n\t        null,\n\t        input.substring(peg$savedPos, peg$currPos),\n\t        peg$computeLocation(peg$savedPos, peg$currPos)\n\t      );\n\t    }\n\t\n\t    function peg$computePosDetails(pos) {\n\t      var details = peg$posDetailsCache[pos],\n\t          p, ch;\n\t\n\t      if (details) {\n\t        return details;\n\t      } else {\n\t        p = pos - 1;\n\t        while (!peg$posDetailsCache[p]) {\n\t          p--;\n\t        }\n\t\n\t        details = peg$posDetailsCache[p];\n\t        details = {\n\t          line:   details.line,\n\t          column: details.column,\n\t          seenCR: details.seenCR\n\t        };\n\t\n\t        while (p < pos) {\n\t          ch = input.charAt(p);\n\t          if (ch === \"\\n\") {\n\t            if (!details.seenCR) { details.line++; }\n\t            details.column = 1;\n\t            details.seenCR = false;\n\t          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n\t            details.line++;\n\t            details.column = 1;\n\t            details.seenCR = true;\n\t          } else {\n\t            details.column++;\n\t            details.seenCR = false;\n\t          }\n\t\n\t          p++;\n\t        }\n\t\n\t        peg$posDetailsCache[pos] = details;\n\t        return details;\n\t      }\n\t    }\n\t\n\t    function peg$computeLocation(startPos, endPos) {\n\t      var startPosDetails = peg$computePosDetails(startPos),\n\t          endPosDetails   = peg$computePosDetails(endPos);\n\t\n\t      return {\n\t        start: {\n\t          offset: startPos,\n\t          line:   startPosDetails.line,\n\t          column: startPosDetails.column\n\t        },\n\t        end: {\n\t          offset: endPos,\n\t          line:   endPosDetails.line,\n\t          column: endPosDetails.column\n\t        }\n\t      };\n\t    }\n\t\n\t    function peg$fail(expected) {\n\t      if (peg$currPos < peg$maxFailPos) { return; }\n\t\n\t      if (peg$currPos > peg$maxFailPos) {\n\t        peg$maxFailPos = peg$currPos;\n\t        peg$maxFailExpected = [];\n\t      }\n\t\n\t      peg$maxFailExpected.push(expected);\n\t    }\n\t\n\t    function peg$buildException(message, expected, found, location) {\n\t      function cleanupExpected(expected) {\n\t        var i = 1;\n\t\n\t        expected.sort(function(a, b) {\n\t          if (a.description < b.description) {\n\t            return -1;\n\t          } else if (a.description > b.description) {\n\t            return 1;\n\t          } else {\n\t            return 0;\n\t          }\n\t        });\n\t\n\t        while (i < expected.length) {\n\t          if (expected[i - 1] === expected[i]) {\n\t            expected.splice(i, 1);\n\t          } else {\n\t            i++;\n\t          }\n\t        }\n\t      }\n\t\n\t      function buildMessage(expected, found) {\n\t        function stringEscape(s) {\n\t          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\t\n\t          return s\n\t            .replace(/\\\\/g,   '\\\\\\\\')\n\t            .replace(/\"/g,    '\\\\\"')\n\t            .replace(/\\x08/g, '\\\\b')\n\t            .replace(/\\t/g,   '\\\\t')\n\t            .replace(/\\n/g,   '\\\\n')\n\t            .replace(/\\f/g,   '\\\\f')\n\t            .replace(/\\r/g,   '\\\\r')\n\t            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n\t            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n\t            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n\t            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n\t        }\n\t\n\t        var expectedDescs = new Array(expected.length),\n\t            expectedDesc, foundDesc, i;\n\t\n\t        for (i = 0; i < expected.length; i++) {\n\t          expectedDescs[i] = expected[i].description;\n\t        }\n\t\n\t        expectedDesc = expected.length > 1\n\t          ? expectedDescs.slice(0, -1).join(\", \")\n\t              + \" or \"\n\t              + expectedDescs[expected.length - 1]\n\t          : expectedDescs[0];\n\t\n\t        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\t\n\t        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n\t      }\n\t\n\t      if (expected !== null) {\n\t        cleanupExpected(expected);\n\t      }\n\t\n\t      return new peg$SyntaxError(\n\t        message !== null ? message : buildMessage(expected, found),\n\t        expected,\n\t        found,\n\t        location\n\t      );\n\t    }\n\t\n\t    function peg$parsescope_relative_selector_list() {\n\t      var s0, s1, s2, s3, s4, s5, s6, s7;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parsescope_relative_selector();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseS();\n\t        if (s2 === peg$FAILED) {\n\t          s2 = null;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          s4 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 44) {\n\t            s5 = peg$c0;\n\t            peg$currPos++;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s6 = peg$parseS();\n\t            if (s6 === peg$FAILED) {\n\t              s6 = null;\n\t            }\n\t            if (s6 !== peg$FAILED) {\n\t              s7 = peg$parsescope_relative_selector();\n\t              if (s7 !== peg$FAILED) {\n\t                s5 = [s5, s6, s7];\n\t                s4 = s5;\n\t              } else {\n\t                peg$currPos = s4;\n\t                s4 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s4;\n\t            s4 = peg$FAILED;\n\t          }\n\t          while (s4 !== peg$FAILED) {\n\t            s3.push(s4);\n\t            s4 = peg$currPos;\n\t            if (input.charCodeAt(peg$currPos) === 44) {\n\t              s5 = peg$c0;\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c1); }\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s6 = peg$parseS();\n\t              if (s6 === peg$FAILED) {\n\t                s6 = null;\n\t              }\n\t              if (s6 !== peg$FAILED) {\n\t                s7 = peg$parsescope_relative_selector();\n\t                if (s7 !== peg$FAILED) {\n\t                  s5 = [s5, s6, s7];\n\t                  s4 = s5;\n\t                } else {\n\t                  peg$currPos = s4;\n\t                  s4 = peg$FAILED;\n\t                }\n\t              } else {\n\t                peg$currPos = s4;\n\t                s4 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$FAILED;\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c2(s1, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsescope_relative_selector() {\n\t      var s0, s1, s2, s3, s4, s5, s6;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parsecombinator();\n\t      if (s1 === peg$FAILED) {\n\t        s1 = null;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parsecompound_selector();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          s4 = peg$currPos;\n\t          s5 = peg$parsecombinator();\n\t          if (s5 !== peg$FAILED) {\n\t            s6 = peg$parsecompound_selector();\n\t            if (s6 !== peg$FAILED) {\n\t              s5 = [s5, s6];\n\t              s4 = s5;\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s4;\n\t            s4 = peg$FAILED;\n\t          }\n\t          while (s4 !== peg$FAILED) {\n\t            s3.push(s4);\n\t            s4 = peg$currPos;\n\t            s5 = peg$parsecombinator();\n\t            if (s5 !== peg$FAILED) {\n\t              s6 = peg$parsecompound_selector();\n\t              if (s6 !== peg$FAILED) {\n\t                s5 = [s5, s6];\n\t                s4 = s5;\n\t              } else {\n\t                peg$currPos = s4;\n\t                s4 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$FAILED;\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c3(s1, s2, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsecombinator() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parseS();\n\t      if (s1 === peg$FAILED) {\n\t        s1 = null;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 62) {\n\t          s2 = peg$c4;\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c5); }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parseS();\n\t          if (s3 === peg$FAILED) {\n\t            s3 = null;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c6();\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        s1 = [];\n\t        s2 = peg$parseS();\n\t        if (s2 !== peg$FAILED) {\n\t          while (s2 !== peg$FAILED) {\n\t            s1.push(s2);\n\t            s2 = peg$parseS();\n\t          }\n\t        } else {\n\t          s1 = peg$FAILED;\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          peg$savedPos = s0;\n\t          s1 = peg$c7();\n\t        }\n\t        s0 = s1;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsecompound_selector() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      s2 = peg$parsepseudo_class();\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          s2 = peg$parsepseudo_class();\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c8(s1);\n\t      }\n\t      s0 = s1;\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        s1 = peg$currPos;\n\t        s2 = peg$parseprop();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          s4 = peg$parseid();\n\t          if (s4 === peg$FAILED) {\n\t            s4 = peg$parseclass();\n\t          }\n\t          while (s4 !== peg$FAILED) {\n\t            s3.push(s4);\n\t            s4 = peg$parseid();\n\t            if (s4 === peg$FAILED) {\n\t              s4 = peg$parseclass();\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s2 = [s2, s3];\n\t            s1 = s2;\n\t          } else {\n\t            peg$currPos = s1;\n\t            s1 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s1;\n\t          s1 = peg$FAILED;\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          s2 = [];\n\t          s3 = peg$parsepseudo_class();\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            s3 = peg$parsepseudo_class();\n\t          }\n\t          if (s2 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c9(s1, s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$currPos;\n\t          s1 = [];\n\t          s2 = peg$parseid();\n\t          if (s2 === peg$FAILED) {\n\t            s2 = peg$parseclass();\n\t          }\n\t          if (s2 !== peg$FAILED) {\n\t            while (s2 !== peg$FAILED) {\n\t              s1.push(s2);\n\t              s2 = peg$parseid();\n\t              if (s2 === peg$FAILED) {\n\t                s2 = peg$parseclass();\n\t              }\n\t            }\n\t          } else {\n\t            s1 = peg$FAILED;\n\t          }\n\t          if (s1 !== peg$FAILED) {\n\t            s2 = [];\n\t            s3 = peg$parsepseudo_class();\n\t            while (s3 !== peg$FAILED) {\n\t              s2.push(s3);\n\t              s3 = peg$parsepseudo_class();\n\t            }\n\t            if (s2 !== peg$FAILED) {\n\t              peg$savedPos = s0;\n\t              s1 = peg$c10(s1, s2);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseprop() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 42) {\n\t        s1 = peg$c11;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n\t      }\n\t      if (s1 === peg$FAILED) {\n\t        s1 = peg$parsePROP();\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c13(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseid() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 35) {\n\t        s1 = peg$c14;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c15); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseIDENT();\n\t        if (s2 !== peg$FAILED) {\n\t          peg$savedPos = s0;\n\t          s1 = peg$c16(s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseclass() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 46) {\n\t        s1 = peg$c17;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseIDENT();\n\t        if (s2 !== peg$FAILED) {\n\t          peg$savedPos = s0;\n\t          s1 = peg$c19(s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsepseudo_class() {\n\t      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 58) {\n\t        s1 = peg$c20;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseIDENT();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 40) {\n\t            s4 = peg$c22;\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            s5 = peg$parseS();\n\t            if (s5 === peg$FAILED) {\n\t              s5 = null;\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s6 = peg$parseVALUE();\n\t              if (s6 !== peg$FAILED) {\n\t                s7 = peg$parseS();\n\t                if (s7 === peg$FAILED) {\n\t                  s7 = null;\n\t                }\n\t                if (s7 !== peg$FAILED) {\n\t                  s8 = [];\n\t                  s9 = peg$currPos;\n\t                  if (input.charCodeAt(peg$currPos) === 44) {\n\t                    s10 = peg$c0;\n\t                    peg$currPos++;\n\t                  } else {\n\t                    s10 = peg$FAILED;\n\t                    if (peg$silentFails === 0) { peg$fail(peg$c1); }\n\t                  }\n\t                  if (s10 !== peg$FAILED) {\n\t                    s11 = peg$parseS();\n\t                    if (s11 === peg$FAILED) {\n\t                      s11 = null;\n\t                    }\n\t                    if (s11 !== peg$FAILED) {\n\t                      s12 = peg$parseVALUE();\n\t                      if (s12 !== peg$FAILED) {\n\t                        s13 = peg$parseS();\n\t                        if (s13 === peg$FAILED) {\n\t                          s13 = null;\n\t                        }\n\t                        if (s13 !== peg$FAILED) {\n\t                          s10 = [s10, s11, s12, s13];\n\t                          s9 = s10;\n\t                        } else {\n\t                          peg$currPos = s9;\n\t                          s9 = peg$FAILED;\n\t                        }\n\t                      } else {\n\t                        peg$currPos = s9;\n\t                        s9 = peg$FAILED;\n\t                      }\n\t                    } else {\n\t                      peg$currPos = s9;\n\t                      s9 = peg$FAILED;\n\t                    }\n\t                  } else {\n\t                    peg$currPos = s9;\n\t                    s9 = peg$FAILED;\n\t                  }\n\t                  while (s9 !== peg$FAILED) {\n\t                    s8.push(s9);\n\t                    s9 = peg$currPos;\n\t                    if (input.charCodeAt(peg$currPos) === 44) {\n\t                      s10 = peg$c0;\n\t                      peg$currPos++;\n\t                    } else {\n\t                      s10 = peg$FAILED;\n\t                      if (peg$silentFails === 0) { peg$fail(peg$c1); }\n\t                    }\n\t                    if (s10 !== peg$FAILED) {\n\t                      s11 = peg$parseS();\n\t                      if (s11 === peg$FAILED) {\n\t                        s11 = null;\n\t                      }\n\t                      if (s11 !== peg$FAILED) {\n\t                        s12 = peg$parseVALUE();\n\t                        if (s12 !== peg$FAILED) {\n\t                          s13 = peg$parseS();\n\t                          if (s13 === peg$FAILED) {\n\t                            s13 = null;\n\t                          }\n\t                          if (s13 !== peg$FAILED) {\n\t                            s10 = [s10, s11, s12, s13];\n\t                            s9 = s10;\n\t                          } else {\n\t                            peg$currPos = s9;\n\t                            s9 = peg$FAILED;\n\t                          }\n\t                        } else {\n\t                          peg$currPos = s9;\n\t                          s9 = peg$FAILED;\n\t                        }\n\t                      } else {\n\t                        peg$currPos = s9;\n\t                        s9 = peg$FAILED;\n\t                      }\n\t                    } else {\n\t                      peg$currPos = s9;\n\t                      s9 = peg$FAILED;\n\t                    }\n\t                  }\n\t                  if (s8 !== peg$FAILED) {\n\t                    s9 = peg$parseS();\n\t                    if (s9 === peg$FAILED) {\n\t                      s9 = null;\n\t                    }\n\t                    if (s9 !== peg$FAILED) {\n\t                      if (input.charCodeAt(peg$currPos) === 41) {\n\t                        s10 = peg$c24;\n\t                        peg$currPos++;\n\t                      } else {\n\t                        s10 = peg$FAILED;\n\t                        if (peg$silentFails === 0) { peg$fail(peg$c25); }\n\t                      }\n\t                      if (s10 !== peg$FAILED) {\n\t                        s4 = [s4, s5, s6, s7, s8, s9, s10];\n\t                        s3 = s4;\n\t                      } else {\n\t                        peg$currPos = s3;\n\t                        s3 = peg$FAILED;\n\t                      }\n\t                    } else {\n\t                      peg$currPos = s3;\n\t                      s3 = peg$FAILED;\n\t                    }\n\t                  } else {\n\t                    peg$currPos = s3;\n\t                    s3 = peg$FAILED;\n\t                  }\n\t                } else {\n\t                  peg$currPos = s3;\n\t                  s3 = peg$FAILED;\n\t                }\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$FAILED;\n\t          }\n\t          if (s3 === peg$FAILED) {\n\t            s3 = null;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c26(s2, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseVALUE() {\n\t      var s0;\n\t\n\t      s0 = peg$parseNUMBER();\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$parseSTRING();\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$parseREGEX();\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsePROP() {\n\t      var s0;\n\t\n\t      s0 = peg$parseSTRING();\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$parseIDENT();\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseIDENT() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      if (peg$c27.test(input.charAt(peg$currPos))) {\n\t        s1 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        if (peg$c29.test(input.charAt(peg$currPos))) {\n\t          s3 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s3 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n\t        }\n\t        while (s3 !== peg$FAILED) {\n\t          s2.push(s3);\n\t          if (peg$c29.test(input.charAt(peg$currPos))) {\n\t            s3 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          peg$savedPos = s0;\n\t          s1 = peg$c31();\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseREGEX() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 47) {\n\t        s1 = peg$c32;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 92) {\n\t          s4 = peg$c34;\n\t          peg$currPos++;\n\t        } else {\n\t          s4 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n\t        }\n\t        if (s4 !== peg$FAILED) {\n\t          if (input.length > peg$currPos) {\n\t            s5 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c36); }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s4 = [s4, s5];\n\t            s3 = s4;\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$FAILED;\n\t        }\n\t        if (s3 === peg$FAILED) {\n\t          if (peg$c37.test(input.charAt(peg$currPos))) {\n\t            s3 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c38); }\n\t          }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            s3 = peg$currPos;\n\t            if (input.charCodeAt(peg$currPos) === 92) {\n\t              s4 = peg$c34;\n\t              peg$currPos++;\n\t            } else {\n\t              s4 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              if (input.length > peg$currPos) {\n\t                s5 = input.charAt(peg$currPos);\n\t                peg$currPos++;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c36); }\n\t              }\n\t              if (s5 !== peg$FAILED) {\n\t                s4 = [s4, s5];\n\t                s3 = s4;\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$FAILED;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$FAILED;\n\t            }\n\t            if (s3 === peg$FAILED) {\n\t              if (peg$c37.test(input.charAt(peg$currPos))) {\n\t                s3 = input.charAt(peg$currPos);\n\t                peg$currPos++;\n\t              } else {\n\t                s3 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c38); }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          s2 = peg$FAILED;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 47) {\n\t            s3 = peg$c32;\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c33); }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = [];\n\t            if (peg$c39.test(input.charAt(peg$currPos))) {\n\t              s5 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c40); }\n\t            }\n\t            while (s5 !== peg$FAILED) {\n\t              s4.push(s5);\n\t              if (peg$c39.test(input.charAt(peg$currPos))) {\n\t                s5 = input.charAt(peg$currPos);\n\t                peg$currPos++;\n\t              } else {\n\t                s5 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c40); }\n\t              }\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              peg$savedPos = s0;\n\t              s1 = peg$c41(s2, s4);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseSTRING() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parseSTRING1();\n\t      if (s1 === peg$FAILED) {\n\t        s1 = peg$parseSTRING2();\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c42();\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseSTRING1() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 34) {\n\t        s1 = peg$c43;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 92) {\n\t          s4 = peg$c34;\n\t          peg$currPos++;\n\t        } else {\n\t          s4 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n\t        }\n\t        if (s4 !== peg$FAILED) {\n\t          if (input.length > peg$currPos) {\n\t            s5 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c36); }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s4 = [s4, s5];\n\t            s3 = s4;\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$FAILED;\n\t        }\n\t        if (s3 === peg$FAILED) {\n\t          if (peg$c45.test(input.charAt(peg$currPos))) {\n\t            s3 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c46); }\n\t          }\n\t        }\n\t        while (s3 !== peg$FAILED) {\n\t          s2.push(s3);\n\t          s3 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 92) {\n\t            s4 = peg$c34;\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            if (input.length > peg$currPos) {\n\t              s5 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c36); }\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s4 = [s4, s5];\n\t              s3 = s4;\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$FAILED;\n\t          }\n\t          if (s3 === peg$FAILED) {\n\t            if (peg$c45.test(input.charAt(peg$currPos))) {\n\t              s3 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s3 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c46); }\n\t            }\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 34) {\n\t            s3 = peg$c43;\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c44); }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s1 = [s1, s2, s3];\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseSTRING2() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 39) {\n\t        s1 = peg$c47;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 92) {\n\t          s4 = peg$c34;\n\t          peg$currPos++;\n\t        } else {\n\t          s4 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n\t        }\n\t        if (s4 !== peg$FAILED) {\n\t          if (input.length > peg$currPos) {\n\t            s5 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c36); }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s4 = [s4, s5];\n\t            s3 = s4;\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$FAILED;\n\t        }\n\t        if (s3 === peg$FAILED) {\n\t          if (peg$c49.test(input.charAt(peg$currPos))) {\n\t            s3 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c50); }\n\t          }\n\t        }\n\t        while (s3 !== peg$FAILED) {\n\t          s2.push(s3);\n\t          s3 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 92) {\n\t            s4 = peg$c34;\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            if (input.length > peg$currPos) {\n\t              s5 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c36); }\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s4 = [s4, s5];\n\t              s3 = s4;\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$FAILED;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$FAILED;\n\t          }\n\t          if (s3 === peg$FAILED) {\n\t            if (peg$c49.test(input.charAt(peg$currPos))) {\n\t              s3 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s3 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c50); }\n\t            }\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 39) {\n\t            s3 = peg$c47;\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s1 = [s1, s2, s3];\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseNUMBER() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parseSIGN();\n\t      if (s1 === peg$FAILED) {\n\t        s1 = null;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseNAN();\n\t        if (s2 === peg$FAILED) {\n\t          s2 = peg$parseINFINITY();\n\t          if (s2 === peg$FAILED) {\n\t            s2 = peg$parseBINARY();\n\t            if (s2 === peg$FAILED) {\n\t              s2 = peg$parseOCTAL();\n\t              if (s2 === peg$FAILED) {\n\t                s2 = peg$parseHEXADECIMAL();\n\t                if (s2 === peg$FAILED) {\n\t                  s2 = peg$parseDECIMAL();\n\t                  if (s2 === peg$FAILED) {\n\t                    s2 = peg$parseFLOAT();\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          peg$savedPos = s0;\n\t          s1 = peg$c51(s1, s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseNAN() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 3) === peg$c52) {\n\t        s1 = peg$c52;\n\t        peg$currPos += 3;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c53); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c54();\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseINFINITY() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 8) === peg$c55) {\n\t        s1 = peg$c55;\n\t        peg$currPos += 8;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$savedPos = s0;\n\t        s1 = peg$c57();\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseBINARY() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 48) {\n\t        s1 = peg$c58;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        if (peg$c60.test(input.charAt(peg$currPos))) {\n\t          s2 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          if (peg$c62.test(input.charAt(peg$currPos))) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c63); }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            while (s4 !== peg$FAILED) {\n\t              s3.push(s4);\n\t              if (peg$c62.test(input.charAt(peg$currPos))) {\n\t                s4 = input.charAt(peg$currPos);\n\t                peg$currPos++;\n\t              } else {\n\t                s4 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c63); }\n\t              }\n\t            }\n\t          } else {\n\t            s3 = peg$FAILED;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c64();\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseOCTAL() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 48) {\n\t        s1 = peg$c58;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        if (peg$c65.test(input.charAt(peg$currPos))) {\n\t          s2 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c66); }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          if (peg$c67.test(input.charAt(peg$currPos))) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c68); }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            while (s4 !== peg$FAILED) {\n\t              s3.push(s4);\n\t              if (peg$c67.test(input.charAt(peg$currPos))) {\n\t                s4 = input.charAt(peg$currPos);\n\t                peg$currPos++;\n\t              } else {\n\t                s4 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c68); }\n\t              }\n\t            }\n\t          } else {\n\t            s3 = peg$FAILED;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c64();\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseHEXADECIMAL() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 48) {\n\t        s1 = peg$c58;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        if (peg$c69.test(input.charAt(peg$currPos))) {\n\t          s2 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c70); }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          if (peg$c71.test(input.charAt(peg$currPos))) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            while (s4 !== peg$FAILED) {\n\t              s3.push(s4);\n\t              if (peg$c71.test(input.charAt(peg$currPos))) {\n\t                s4 = input.charAt(peg$currPos);\n\t                peg$currPos++;\n\t              } else {\n\t                s4 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n\t              }\n\t            }\n\t          } else {\n\t            s3 = peg$FAILED;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c64();\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseDECIMAL() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (peg$c73.test(input.charAt(peg$currPos))) {\n\t        s2 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          if (peg$c73.test(input.charAt(peg$currPos))) {\n\t            s2 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$FAILED;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 46) {\n\t          s3 = peg$c17;\n\t          peg$currPos++;\n\t        } else {\n\t          s3 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          s4 = [];\n\t          if (peg$c73.test(input.charAt(peg$currPos))) {\n\t            s5 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n\t          }\n\t          while (s5 !== peg$FAILED) {\n\t            s4.push(s5);\n\t            if (peg$c73.test(input.charAt(peg$currPos))) {\n\t              s5 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c74); }\n\t            }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            s3 = [s3, s4];\n\t            s2 = s3;\n\t          } else {\n\t            peg$currPos = s2;\n\t            s2 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s2;\n\t          s2 = peg$FAILED;\n\t        }\n\t        if (s2 === peg$FAILED) {\n\t          s2 = null;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parseINDEX();\n\t          if (s3 === peg$FAILED) {\n\t            s3 = null;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c75();\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseFLOAT() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 46) {\n\t        s1 = peg$c17;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        if (peg$c73.test(input.charAt(peg$currPos))) {\n\t          s3 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s3 = peg$FAILED;\n\t          if (peg$silentFails === 0) { peg$fail(peg$c74); }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            if (peg$c73.test(input.charAt(peg$currPos))) {\n\t              s3 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s3 = peg$FAILED;\n\t              if (peg$silentFails === 0) { peg$fail(peg$c74); }\n\t            }\n\t          }\n\t        } else {\n\t          s2 = peg$FAILED;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parseINDEX();\n\t          if (s3 === peg$FAILED) {\n\t            s3 = null;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$savedPos = s0;\n\t            s1 = peg$c64();\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseINDEX() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 101) {\n\t        s1 = peg$c76;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c77); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseSIGN();\n\t        if (s2 === peg$FAILED) {\n\t          s2 = null;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          if (peg$c73.test(input.charAt(peg$currPos))) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            while (s4 !== peg$FAILED) {\n\t              s3.push(s4);\n\t              if (peg$c73.test(input.charAt(peg$currPos))) {\n\t                s4 = input.charAt(peg$currPos);\n\t                peg$currPos++;\n\t              } else {\n\t                s4 = peg$FAILED;\n\t                if (peg$silentFails === 0) { peg$fail(peg$c74); }\n\t              }\n\t            }\n\t          } else {\n\t            s3 = peg$FAILED;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s1 = [s1, s2, s3];\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$FAILED;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$FAILED;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseSIGN() {\n\t      var s0;\n\t\n\t      if (peg$c78.test(input.charAt(peg$currPos))) {\n\t        s0 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s0 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c79); }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseS() {\n\t      var s0, s1;\n\t\n\t      s0 = [];\n\t      if (peg$c80.test(input.charAt(peg$currPos))) {\n\t        s1 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) { peg$fail(peg$c81); }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        while (s1 !== peg$FAILED) {\n\t          s0.push(s1);\n\t          if (peg$c80.test(input.charAt(peg$currPos))) {\n\t            s1 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s1 = peg$FAILED;\n\t            if (peg$silentFails === 0) { peg$fail(peg$c81); }\n\t          }\n\t        }\n\t      } else {\n\t        s0 = peg$FAILED;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t\r\n\t      function Selector(exp) {\r\n\t        for (var i in exp) {\r\n\t          exp[i].next = exp[+i+1];\r\n\t          this.push(exp[i]);\r\n\t        }\r\n\t\r\n\t        this.start = exp[0];\r\n\t      }\r\n\t      Selector.prototype = [];\r\n\t      Selector.prototype.toString = function () {\r\n\t        return this.join('');\r\n\t      };\r\n\t      \r\n\t      function Combinator(operator) {\r\n\t        this.operator = operator;\r\n\t      }\r\n\t      Combinator.prototype = {\r\n\t        toString: function () {\r\n\t          return this.operator;\r\n\t        }\r\n\t      };\r\n\t      \r\n\t      function Compound(element, attributes, pseudoClasses) {\r\n\t        if (element) {\r\n\t          this.element = element;\r\n\t          this.push(element);\r\n\t        }\r\n\t        \r\n\t        if (attributes && attributes.length) {\r\n\t          this.attributes = attributes;\r\n\t          this.push.apply(this, attributes);\r\n\t        }\r\n\t\r\n\t        if (pseudoClasses && pseudoClasses.length) {\r\n\t          this.pseudoClasses = pseudoClasses;\r\n\t          this.push.apply(this, pseudoClasses);\r\n\t        }\r\n\t      }\r\n\t      Compound.prototype = [];\r\n\t      Compound.prototype.toString = function () {\r\n\t        return this.join('');\r\n\t      };\r\n\t      \r\n\t      function Prop(ident) {\r\n\t        this.type = 'Prop';\r\n\t        this.ident = ident;\r\n\t      }\r\n\t      Prop.prototype = {\r\n\t        toString: function () {\r\n\t          return this.ident;\r\n\t        }\r\n\t      };\r\n\t      \r\n\t      function Id(ident) {\r\n\t        this.type = 'Id';\r\n\t        this.ident = ident;\r\n\t      }\r\n\t      Id.prototype = {\r\n\t        toString: function () {\r\n\t          return '#' + this.ident;\r\n\t        }\r\n\t      };\r\n\t      \r\n\t      function Class(ident) {\r\n\t        this.type = 'Class';\r\n\t        this.ident = ident;\r\n\t      }\r\n\t      Class.prototype = {\r\n\t        toString: function () {\r\n\t          return '.' + this.ident;\r\n\t        }\r\n\t      };\r\n\t\r\n\t      function PseudoClass(ident, args) {\r\n\t        this.type = 'PseudoClass';\r\n\t        this.ident = ident;\r\n\t        this.args = args || [];\r\n\t      }\r\n\t      PseudoClass.prototype = {\r\n\t        toString: function () {\r\n\t          if (this.args && this.args.length) {\r\n\t            return ':' + this.ident + '(' + this.args.join() + ')';\r\n\t          } else {\r\n\t            return ':' + this.ident;\r\n\t          }\r\n\t        }\r\n\t      };\r\n\t      \r\n\t      /*\r\n\t      function Attribute(ident, match, value, flag) {\r\n\t        this.ident = ident;\r\n\t        this.match = match;\r\n\t        this.value = value;\r\n\t        this.flag = flag;\r\n\t      }\r\n\t      */\r\n\t\n\t\n\t    peg$result = peg$startRuleFunction();\n\t\n\t    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n\t      return peg$result;\n\t    } else {\n\t      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n\t        peg$fail({ type: \"end\", description: \"end of input\" });\n\t      }\n\t\n\t      throw peg$buildException(\n\t        null,\n\t        peg$maxFailExpected,\n\t        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n\t        peg$maxFailPos < input.length\n\t          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n\t          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n\t      );\n\t    }\n\t  }\n\t\n\t  return {\n\t    SyntaxError: peg$SyntaxError,\n\t    parse:       peg$parse\n\t  };\n\t})();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\texports.getFromPath = getFromPath;\n\texports.getFromPathArray = getFromPathArray;\n\texports.listStruct = listStruct;\n\tfunction getFromPath(root, path) {\n\t  var delimiter = arguments.length <= 2 || arguments[2] === undefined ? '/' : arguments[2];\n\t\n\t  if (path.charAt(0) == delimiter) {\n\t    path = path.substr(1);\n\t  }\n\t\n\t  return getFromPathArray(root, path.split(delimiter));\n\t}\n\t\n\tfunction getFromPathArray(root, path) {\n\t  var result = root;\n\t\n\t  var _every = void 0;\n\t\n\t  var _m$result = true;\n\t\n\t  var _m$i = 0,\n\t      _m$I = path.length;\n\t  while (_m$i < _m$I) {\n\t    var _val2 = path[_m$i];\n\t\n\t    var _m$visitor4 = void 0;\n\t\n\t    result = result[_val2];\n\t    _m$visitor4 = result !== undefined && result !== null;\n\t\n\t    if (!_m$visitor4) {\n\t      _m$result = false;\n\t      break;\n\t    }\n\t\n\t    _m$i++;\n\t  }\n\t\n\t  _every = _m$result;\n\t  _every;\n\t  return result;\n\t}\n\t\n\tfunction listStruct(target) {\n\t  var type = arguments.length <= 1 || arguments[1] === undefined ? 'bfs' : arguments[1];\n\t  var depth = arguments[2];\n\t\n\t  var result = [];\n\t  type = type.toLowerCase();\n\t  if (type == 'bfs') {\n\t    var _breadthFirstTraversal2 = void 0;\n\t\n\t    var _m$buffer = [[target, [], []]];\n\t    var _m$tmp, _m$node, _m$path, _m$parent;\n\t    var _m$key, _m$newNode;\n\t    while (_m$buffer.length) {\n\t      _m$tmp = _m$buffer.shift();\n\t      _m$node = _m$tmp[0];\n\t      _m$path = _m$tmp[1];\n\t      _m$parent = _m$tmp[2];\n\t      if (depth === undefined || _m$path.length == depth) {\n\t        var _m$visitor5 = void 0;\n\t\n\t        result.push([_m$path, _m$parent, _m$node]);\n\t\n\t        _m$visitor5;\n\t      }\n\t      if ((typeof _m$node === 'undefined' ? 'undefined' : _typeof(_m$node)) == 'object' && (depth === undefined || _m$path.length < depth)) {\n\t        _m$parent = _m$parent.slice();\n\t        _m$parent.push(_m$node);\n\t        for (_m$key in _m$node) {\n\t          _m$newNode = _m$node[_m$key];\n\t          if (_m$parent.indexOf(_m$newNode) == -1) {\n\t            _m$buffer.push([_m$newNode, _m$path.concat(_m$key), _m$parent]);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    _breadthFirstTraversal2;\n\t  } else if (type == 'dfs') {\n\t    var _depthFirstTraversal2 = void 0;\n\t\n\t    var _m$traverse = function m$traverse(m$node, m$path, m$parent) {\n\t      var _m$visitor3 = void 0;\n\t\n\t      result.push([m$path, m$parent, m$node]);\n\t\n\t      _m$visitor3;\n\t      if ((typeof m$node === 'undefined' ? 'undefined' : _typeof(m$node)) == 'object') {\n\t        var m$key, m$newNode;\n\t        m$parent = m$parent.slice();\n\t        m$parent.push(m$node);\n\t        for (m$key in m$node) {\n\t          m$newNode = m$node[m$key];\n\t          if (m$parent.indexOf(m$newNode) == -1) {\n\t            m$traverse(m$newNode, m$path.concat(m$key), m$parent);\n\t          }\n\t        }\n\t      }\n\t    };\n\t\n\t    _m$traverse(target, [], []);\n\t\n\t    _depthFirstTraversal2;\n\t  }\n\t\n\t  return result;\n\t}\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** c3s-parser.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap befa32066bc812cfac54\n **/","import Selector from './selector.js';\r\nimport {getFromPath, getFromPathArray, listStruct} from './util.js';\r\n\r\nfunction c3s(root, option) {\r\n  return new Selector(root, option);\r\n};\r\n\r\nc3s.getFromPath = getFromPath;\r\n\r\nexport default c3s;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","\r\nDEFINE_MACRO(BREADTH_FIRST_TRAVERSAL, (m$target, m$depth, m$visitor) => {\r\n  var m$buffer = [[m$target, [], []]];\r\n  var m$tmp, m$node, m$path, m$parent;\r\n  var m$key, m$newNode;\r\n  while (m$buffer.length) {\r\n    m$tmp = m$buffer.shift();\r\n    m$node = m$tmp[0];\r\n    m$path = m$tmp[1];\r\n    m$parent = m$tmp[2];\r\n    if (m$depth === undefined || m$path.length == m$depth) {\r\n      m$visitor(m$node, m$path, m$parent);\r\n    }\r\n    if (typeof m$node == 'object' && (m$depth === undefined || m$path.length < m$depth)) {\r\n      m$parent = m$parent.slice();\r\n      m$parent.push(m$node);\r\n      for (m$key in m$node) {\r\n        m$newNode = m$node[m$key];\r\n        if (m$parent.indexOf(m$newNode) == -1) {\r\n          m$buffer.push([m$newNode, m$path.concat(m$key), m$parent]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nDEFINE_MACRO(BREADTH_FIRST_SEARCH, (m$target, m$depth, m$visitor) => {\r\n  var m$result;\r\n\r\n  var m$buffer = [[m$target, [], []]];\r\n  var m$tmp, m$node, m$path, m$parent;\r\n  var m$key, m$newNode;\r\n  while (m$buffer.length) {\r\n    m$tmp = m$buffer.shift();\r\n    m$node = m$tmp[0];\r\n    m$path = m$tmp[1];\r\n    m$parent = m$tmp[2];\r\n    if (m$depth === undefined || m$path.length == m$depth) {\r\n      if (m$visitor(m$node, m$path, m$parent)){\r\n        m$result = [m$node, m$path, m$parent];\r\n        break;\r\n      }\r\n    } else if (typeof m$node == 'object' && (m$depth === undefined || m$path.length < m$depth)) {\r\n      m$parent = m$parent.slice();\r\n      m$parent.push(m$node);\r\n      for (m$key in m$node) {\r\n        m$newNode = m$node[m$key];\r\n        if (m$parent.indexOf(m$newNode) == -1) {\r\n          m$buffer.push([m$newNode, m$path.concat(m$key), m$parent]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\nDEFINE_MACRO(DEPTH_FIRST_TRAVERSAL, (m$target, m$visitor) => {\r\n  var m$traverse = function m$traverse(m$node, m$path, m$parent) {\r\n    m$visitor(m$node, m$path, m$parent);\r\n    if (typeof m$node == 'object') {\r\n      var m$key, m$newNode;\r\n      m$parent = m$parent.slice();\r\n      m$parent.push(m$node);\r\n      for (m$key in m$node) {\r\n        m$newNode = m$node[m$key];\r\n        if (m$parent.indexOf(m$newNode) == -1) {\r\n          m$traverse(m$newNode, m$path.concat(m$key), m$parent)\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  m$traverse(m$target, [], []);\r\n});\r\n\r\nDEFINE_MACRO(DEPTH_FIRST_SEARCH, (m$target, m$visitor) => {\r\n  var m$traverse = function m$traverse(m$node, m$path, m$parent) {\r\n    if (m$visitor(m$node, m$path, m$parent)) {\r\n      return [m$node, m$path, m$parent];\r\n    }\r\n\r\n    if (typeof m$node == 'object') {\r\n      var m$key, m$newNode, m$tmp;\r\n      m$parent = m$parent.slice();\r\n      m$parent.push(m$node);\r\n      for (m$key in m$node) {\r\n        m$newNode = m$node[m$key];\r\n        if (m$parent.indexOf(m$newNode) == -1) {\r\n          if (m$tmp = m$traverse(m$newNode, m$path.concat(m$key), m$parent)) {\r\n            return m$tmp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return m$traverse(m$target, [], []);\r\n});\r\n\r\nDEFINE_MACRO(COMPARE_TWO_ARRAY, function (m$array1, m$array2) {\r\n  let m$result = true;\r\n\r\n  if (m$array1.length == m$array2.length) {\r\n    var m$i = 0, m$I = m$array1.length;\r\n    while (m$i < m$I) {\r\n      if (m$array1[m$i] !== m$array2[m$i]) {\r\n        m$result = false;\r\n        break;\r\n      }\r\n      \r\n      m$i++;\r\n    }\r\n  } else {\r\n    m$result = false;\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\nDEFINE_MACRO(FOR_EACH, function(m$input, m$visitor) {\r\n  let m$i = 0, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    m$visitor(m$input[m$i], m$i, m$input);\r\n    m$i++;\r\n  }\r\n});\r\n\r\nDEFINE_MACRO(EVERY, function(m$input, m$visitor) {\r\n  let m$result = true;\r\n\r\n  let m$i = 0, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    if (!m$visitor(m$input[m$i], m$i, m$input)) {\r\n      m$result = false;\r\n      break;\r\n    }\r\n\r\n    m$i++;\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\nDEFINE_MACRO(OFFSET_EVERY, function(m$input, m$offse, m$visitor) {\r\n  let m$result = true;\r\n\r\n  let m$i = m$offse, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    if (!m$visitor(m$input[m$i], m$i, m$input)) {\r\n      m$result = false;\r\n      break;\r\n    }\r\n\r\n    m$i++;\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\nDEFINE_MACRO(SOME, function(m$input, m$visitor) {\r\n  let m$result = false;\r\n\r\n  let m$i = 0, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    if (m$visitor(m$input[m$i], m$i, m$input)) {\r\n      m$result = true;\r\n      break;\r\n    }\r\n\r\n    m$i++;\r\n  }\r\n\r\n  return m$result;\r\n});\r\nDEFINE_MACRO(REVERSE_SOME, function(m$input, m$visitor) {\r\n  let m$result = false;\r\n\r\n  let m$i = m$input.length-1;\r\n  while(m$i > 0) {\r\n    if (m$visitor(m$input[m$i], m$i, m$input)) {\r\n      m$result = true;\r\n      break;\r\n    }\r\n\r\n    m$i--;\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\n\r\nDEFINE_MACRO(FILTER, function(m$input, m$visitor) {\r\n  const m$filtered = [];\r\n\r\n  let m$i = 0, m$I = m$input.length, m$val;\r\n  while (m$i < m$I) {\r\n    m$val = m$input[m$i];\r\n    if (m$visitor(m$val, m$i, m$input)) {\r\n      m$filtered.push(m$val);\r\n    }\r\n\r\n    m$i++;\r\n  }\r\n\r\n  return m$filtered;\r\n});\r\n\r\nDEFINE_MACRO(MAP, (m$input, m$visitor) => {\r\n  const m$length = m$input.length;\r\n  const m$result = new Array(m$length);\r\n\r\n  let m$i = 0, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    m$result[m$i] = m$visitor(m$input[m$i], m$i, m$input);\r\n    m$i++;\r\n  }\r\n  \r\n  return m$result;\r\n});\r\n\r\nDEFINE_MACRO(REDUCE_BY_INITVAL, function(m$input, m$visitor, m$initialValue) {\r\n  let m$result = m$initialValue;\r\n\r\n  let m$i = 0, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    m$result = m$visitor(m$result, m$input[m$i], m$i, m$input);\r\n    m$i++;\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\n\r\nDEFINE_MACRO(MAP_PUSH, function(m$map, m$key, m$newVal) {\r\n  let m$array = m$map.get(m$key);\r\n  if (m$array instanceof Array) {\r\n    m$array.push(m$newVal);\r\n  } else {\r\n    m$map.set(m$key, [m$newVal]);\r\n  }\r\n});\r\nimport cssParser from './css-parser.pegjs';\r\nimport {getFromPath, getFromPathArray, listStruct} from './util.js';\r\n\r\nexport default class Selector extends Array {\r\n  constructor(root, option) {\r\n    super();\r\n    var self = this;\r\n    Object.assign(\r\n      this,\r\n      // default public property\r\n      {\r\n        selectOne(input) {\r\n          var result = new Selector(undefined, self.__option__);\r\n          var cssRules = cssParser.parse(input);\r\n          var target;\r\n          if (SOME(cssRules, (rule) => {\r\n            target = findFirstMatchNode(rule.start, self.__data__);\r\n            return target !== errorValue;\r\n          })) {\r\n            result[0] = {\r\n              value:target[0],\r\n              path:target[1],\r\n              root:self.__root__\r\n            };\r\n            result.__data__ = target[0];\r\n            result.__root__ = self.__root__;\r\n          }\r\n\r\n          return result\r\n        },\r\n        selectAll(input) {\r\n          var result = new Selector(undefined, self.__option__);\r\n          var cssRules = cssParser.parse(input);\r\n          var targetList = [], tmp;\r\n          FOR_EACH(cssRules, (rule) => {\r\n            tmp = FILTER(findMatchNode(rule.start, self.__data__), (node1, i1)=>{\r\n              return EVERY(targetList, (node2)=>{\r\n                if (node1[0] !== node2[0]) {\r\n                  if (!COMPARE_TWO_ARRAY(node1[1], node2[1])) {\r\n                    return true;\r\n                  } \r\n                }\r\n              });\r\n            });\r\n            Array.prototype.push.apply(targetList, tmp);\r\n          });\r\n          if (targetList.length) {\r\n            FOR_EACH(targetList, (nodeInfo, i)=>{\r\n              result[i] = {\r\n                value:nodeInfo[0],\r\n                path:nodeInfo[1],\r\n                root:self.__root__\r\n              };\r\n            });\r\n            result.__data__ = MAP(targetList, (target)=>target[0]);\r\n            result.__root__ = self.__root__;\r\n          }\r\n\r\n          return result\r\n        },\r\n        getFromPath(path, delimiter='/') {\r\n          var result = new Selector(self.__root__, self.__option__);\r\n          if (path.charAt(0) == delimiter) {\r\n            path = path.substr(1);\r\n          }\r\n          \r\n          path = path.split(delimiter);\r\n          MAP(self, (nodeInfo)=>{\r\n            return {\r\n              value: getFromPathArray(nodeInfo.value, path, delimiter),\r\n              path: nodeInfo.path.concat(path),\r\n              root: nodeInfo.root\r\n            }\r\n          })\r\n          .FILTER((nodeInfo)=>nodeInfo.value)\r\n          .FOR_EACH((nodeInfo,index)=>result[index] = nodeInfo);\r\n          return result;\r\n        },\r\n        resetRoot() {\r\n          var result = new Selector(self.__data__, self.__option__);\r\n          FOR_EACH(self, (nodeInfo,index)=>{\r\n            var tmp = Object.assign({}, nodeInfo);\r\n            tmp.path = [];\r\n            tmp.root = self.__data__;\r\n            result[index] = tmp;\r\n          });\r\n          return result;\r\n        },\r\n        pseudoClass: {\r\n          regexpTest: function (node, path, parent, val) {\r\n            return val.test(node);\r\n          },\r\n          equal: function (node, path, parent, val) {\r\n            return val === node;\r\n          }\r\n        }\r\n      },\r\n      // default private property\r\n      {\r\n        __root__: root,\r\n        __data__: root,\r\n        __option__: option\r\n      },\r\n      option\r\n    );\r\n    if (root) {\r\n      super.push({value:root, path:[], root:root});\r\n    }\r\n\r\n    var errorValue = {};\r\n    // private method -----------------------------------------------------------------\r\n    function findFirstMatchNode(combinator, node) {\r\n      var result;\r\n      if (combinator.operator == ' ') {\r\n        DEPTH_FIRST_SEARCH(node, (subNode, path, parent) => {\r\n          result = FATCH_COMPOUND_SELECTOR(combinator.next, subNode, path, parent);\r\n          if (result !== errorValue) {\r\n            result = FETCH_NEXT_SELECTOR(combinator.next.next, result);\r\n            if (result !== errorValue) {\r\n              return true;\r\n            }\r\n          }\r\n        });\r\n      } else if (combinator.operator == '>') {\r\n        BREADTH_FIRST_SEARCH(node, 1, (subNode, path, parent) => {\r\n          result = FATCH_COMPOUND_SELECTOR(combinator.next, subNode, path, parent);\r\n          if (result !== errorValue) {\r\n            result = FETCH_NEXT_SELECTOR(combinator.next.next, result);\r\n            if (result !== errorValue) {\r\n              return true;\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      return result;\r\n      DEFINE_MACRO(FETCH_NEXT_SELECTOR, (m$combinator, m$nodeInfo) => {\r\n        if (m$combinator) {\r\n          if (typeof m$nodeInfo[0] == 'object') {\r\n            var m$tmp = findFirstMatchNode(m$combinator, m$nodeInfo[0]);\r\n            if (m$tmp !== errorValue) {\r\n              m$nodeInfo[0] = m$tmp[0];\r\n              Array.prototype.push.apply(m$nodeInfo[1], m$tmp[1]);\r\n              Array.prototype.push.apply(m$nodeInfo[2], m$tmp[2]);\r\n              return m$nodeInfo;\r\n            }\r\n          }\r\n\r\n          return errorValue;\r\n        }\r\n\r\n        return m$nodeInfo;\r\n      });\r\n    }\r\n\r\n    function findMatchNode(combinator, node) {\r\n      var result = [], tmp;\r\n      if (combinator.operator == ' ') {\r\n        DEPTH_FIRST_TRAVERSAL(node, (subNode, path, parent) => {\r\n          tmp = FATCH_COMPOUND_SELECTOR(combinator.next, subNode, path, parent);\r\n          if (tmp !== errorValue) {\r\n            tmp = FETCH_NEXT_SELECTOR(combinator.next.next, tmp);\r\n            if (tmp !== errorValue) {\r\n              Array.prototype.push.apply(result, tmp);\r\n            }\r\n          }\r\n        });\r\n      } else if (combinator.operator == '>') {\r\n        BREADTH_FIRST_TRAVERSAL(node, 1, (subNode, path, parent) => {\r\n          tmp = FATCH_COMPOUND_SELECTOR(combinator.next, subNode, path, parent);\r\n          if (tmp !== errorValue) {\r\n            tmp = FETCH_NEXT_SELECTOR(combinator.next.next, tmp);\r\n            if (tmp !== errorValue) {\r\n              Array.prototype.push.apply(result, tmp);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      return result;\r\n      DEFINE_MACRO(FETCH_NEXT_SELECTOR, (m$combinator, m$nodeInfo) => {\r\n        if (m$combinator) {\r\n          if (typeof m$nodeInfo[0] == 'object') {\r\n            var m$tmp = findMatchNode(m$combinator, m$nodeInfo[0]);\r\n            if (m$tmp !== errorValue) {\r\n              FOR_EACH(m$tmp, (rec)=>{\r\n                Array.prototype.unshift.apply(rec[1], m$nodeInfo[1]);\r\n                Array.prototype.unshift.apply(rec[2], m$nodeInfo[2]);\r\n              });\r\n              return m$tmp;\r\n            }\r\n          }\r\n\r\n          return errorValue;\r\n        }\r\n\r\n        return [m$nodeInfo];\r\n      });\r\n    }\r\n\r\n    DEFINE_MACRO(FATCH_COMPOUND_SELECTOR, (m$compound, m$subNode, m$path, m$parent) => {\r\n      if (m$compound.element === undefined || \r\n        m$path[m$path.length-1] === m$compound.element.ident) {\r\n        if (m$compound.attributes === undefined ||\r\n          matchAttribute(m$compound.attributes, m$subNode)) {\r\n          if (m$compound.pseudoClasses !== undefined) {\r\n            var m$tmp = findPesudoClass(m$compound.pseudoClasses, m$subNode, m$path, m$parent);\r\n            if (m$tmp) {\r\n              return m$tmp;\r\n            }\r\n          } else {\r\n            return [m$subNode, m$path, m$parent]\r\n          }\r\n        }\r\n      }\r\n\r\n      return errorValue;\r\n    });\r\n\r\n    function matchAttribute(attrSelectors, node) {\r\n      return EVERY(attrSelectors, (attrSelector) => {\r\n        if (attrSelector.type == 'Id') {\r\n          return node && (\r\n            node.ID == attrSelector.ident ||\r\n            node.Id == attrSelector.ident ||\r\n            node.id == attrSelector.ident);\r\n        } else if (attrSelector.type == 'Class') {\r\n          return node && scope.constructor.name == attrSelector.ident;\r\n        }\r\n\r\n        return false;\r\n      });\r\n    }\r\n\r\n    function findPesudoClass(pseudoClasses, node, path, parent) {\r\n      var result, tmp;\r\n      result = EVERY(pseudoClasses, (pseudoClass) => {\r\n        var pseudoClassMethod = self.pseudoClass[pseudoClass.ident];\r\n        var pseudoClassArgs = [node, path, parent];\r\n        if (pseudoClass.args) {\r\n          pseudoClassArgs = pseudoClassArgs.concat(pseudoClass.args);\r\n        }\r\n\r\n        var tmp = pseudoClassMethod.apply(self, pseudoClassArgs);\r\n        if (!tmp) {\r\n          return false;\r\n        } else if (tmp instanceof Array) {\r\n          node = tmp[0];\r\n          path = tmp[1];\r\n          parent = tmp[2];\r\n        }\r\n\r\n        return true;\r\n      }); \r\n\r\n      return result?[node, path, parent]:false;\r\n    }\r\n  }\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/selector.js\n **/","module.exports = (function() {\n  \"use strict\";\n\n  /*\n   * Generated by PEG.js 0.9.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        parser  = this,\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { scope_relative_selector_list: peg$parsescope_relative_selector_list },\n        peg$startRuleFunction  = peg$parsescope_relative_selector_list,\n\n        peg$c0 = \",\",\n        peg$c1 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c2 = function(first, next) {\r\n            var result = [first];\r\n            for (var i in next) {\r\n              result.push(next[i][2]);\r\n            }\r\n\r\n            return result;\r\n          },\n        peg$c3 = function(first_comb, first_comp, more) {\r\n            var result = [];\r\n            for (var i in more) {\r\n              var item = more[i];\r\n              result.push(item[0], item[1]);\r\n            }\r\n\r\n            result.unshift(first_comp);\r\n\r\n            if (first_comb) {\r\n              result.unshift(first_comb);\r\n            } else {\r\n              result.unshift(new Combinator(\" \"));\r\n            }\r\n\r\n            return new Selector(result);\r\n          },\n        peg$c4 = \">\",\n        peg$c5 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n        peg$c6 = function() {\r\n            return new Combinator(text().trim());\r\n          },\n        peg$c7 = function() {\r\n            return new Combinator(\" \");\r\n          },\n        peg$c8 = function(pseudo_class) {\r\n            return new Compound(undefined, undefined, pseudo_class);\r\n          },\n        peg$c9 = function(compound, pseudo_class) {\r\n            return new Compound(compound[0], compound[1], pseudo_class);\r\n          },\n        peg$c10 = function(compound, pseudo_class) {\r\n            return new Compound(undefined, compound, pseudo_class);\r\n          },\n        peg$c11 = \"*\",\n        peg$c12 = { type: \"literal\", value: \"*\", description: \"\\\"*\\\"\" },\n        peg$c13 = function(prop) {\r\n            return new Prop(prop);\r\n          },\n        peg$c14 = \"#\",\n        peg$c15 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n        peg$c16 = function(val) {\r\n            return new Id(val);\r\n          },\n        peg$c17 = \".\",\n        peg$c18 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c19 = function(val) {\r\n            return new Class(val);\r\n          },\n        peg$c20 = \":\",\n        peg$c21 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c22 = \"(\",\n        peg$c23 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c24 = \")\",\n        peg$c25 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c26 = function(ident, val) {\r\n            if (val) {\r\n              var tmp = [];\r\n              tmp.push(val[2]);\r\n              for (var i in val[4]) {\r\n                tmp.push(val[4][i][2]);\r\n              }\r\n\r\n              val = tmp;\r\n            }\r\n\r\n            return new PseudoClass(ident, val);\r\n          },\n        peg$c27 = /^[$_A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n        peg$c28 = { type: \"class\", value: \"[$_\\\\u0041-\\\\u005a\\\\u0061-\\\\u007a\\\\u00aa\\\\u00b5\\\\u00ba\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u037f\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u048a-\\\\u052f\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0620-\\\\u064a\\\\u066e\\\\u066f\\\\u0671-\\\\u06d3\\\\u06d5\\\\u06e5\\\\u06e6\\\\u06ee\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff\\\\u0710\\\\u0712-\\\\u072f\\\\u074d-\\\\u07a5\\\\u07b1\\\\u07ca-\\\\u07ea\\\\u07f4\\\\u07f5\\\\u07fa\\\\u0800-\\\\u0815\\\\u081a\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08a0-\\\\u08b4\\\\u0904-\\\\u0939\\\\u093d\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bd\\\\u09ce\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e1\\\\u09f0\\\\u09f1\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a72-\\\\u0a74\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abd\\\\u0ad0\\\\u0ae0\\\\u0ae1\\\\u0af9\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3d\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b61\\\\u0b71\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bd0\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c39\\\\u0c3d\\\\u0c58-\\\\u0c5a\\\\u0c60\\\\u0c61\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbd\\\\u0cde\\\\u0ce0\\\\u0ce1\\\\u0cf1\\\\u0cf2\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d\\\\u0d4e\\\\u0d5f-\\\\u0d61\\\\u0d7a-\\\\u0d7f\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0e01-\\\\u0e30\\\\u0e32\\\\u0e33\\\\u0e40-\\\\u0e46\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb0\\\\u0eb2\\\\u0eb3\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f40-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f88-\\\\u0f8c\\\\u1000-\\\\u102a\\\\u103f\\\\u1050-\\\\u1055\\\\u105a-\\\\u105d\\\\u1061\\\\u1065\\\\u1066\\\\u106e-\\\\u1070\\\\u1075-\\\\u1081\\\\u108e\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f5\\\\u13f8-\\\\u13fd\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16ee-\\\\u16f8\\\\u1700-\\\\u170c\\\\u170e-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1780-\\\\u17b3\\\\u17d7\\\\u17dc\\\\u1820-\\\\u1877\\\\u1880-\\\\u18a8\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191e\\\\u1950-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19b0-\\\\u19c9\\\\u1a00-\\\\u1a16\\\\u1a20-\\\\u1a54\\\\u1aa7\\\\u1b05-\\\\u1b33\\\\u1b45-\\\\u1b4b\\\\u1b83-\\\\u1ba0\\\\u1bae\\\\u1baf\\\\u1bba-\\\\u1be5\\\\u1c00-\\\\u1c23\\\\u1c4d-\\\\u1c4f\\\\u1c5a-\\\\u1c7d\\\\u1ce9-\\\\u1cec\\\\u1cee-\\\\u1cf1\\\\u1cf5\\\\u1cf6\\\\u1d00-\\\\u1dbf\\\\u1e00-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2160-\\\\u2188\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cee\\\\u2cf2\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d80-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2e2f\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303c\\\\u3041-\\\\u3096\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400\\\\u4db5\\\\u4e00\\\\u9fd5\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua61f\\\\ua62a\\\\ua62b\\\\ua640-\\\\ua66e\\\\ua67f-\\\\ua69d\\\\ua6a0-\\\\ua6ef\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua7ad\\\\ua7b0-\\\\ua7b7\\\\ua7f7-\\\\ua801\\\\ua803-\\\\ua805\\\\ua807-\\\\ua80a\\\\ua80c-\\\\ua822\\\\ua840-\\\\ua873\\\\ua882-\\\\ua8b3\\\\ua8f2-\\\\ua8f7\\\\ua8fb\\\\ua8fd\\\\ua90a-\\\\ua925\\\\ua930-\\\\ua946\\\\ua960-\\\\ua97c\\\\ua984-\\\\ua9b2\\\\ua9cf\\\\ua9e0-\\\\ua9e4\\\\ua9e6-\\\\ua9ef\\\\ua9fa-\\\\ua9fe\\\\uaa00-\\\\uaa28\\\\uaa40-\\\\uaa42\\\\uaa44-\\\\uaa4b\\\\uaa60-\\\\uaa76\\\\uaa7a\\\\uaa7e-\\\\uaaaf\\\\uaab1\\\\uaab5\\\\uaab6\\\\uaab9-\\\\uaabd\\\\uaac0\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaea\\\\uaaf2-\\\\uaaf4\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uab30-\\\\uab5a\\\\uab5c-\\\\uab65\\\\uab70-\\\\uabe2\\\\uac00\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d\\\\ufb1f-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]\", description: \"[$_\\\\u0041-\\\\u005a\\\\u0061-\\\\u007a\\\\u00aa\\\\u00b5\\\\u00ba\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u037f\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u048a-\\\\u052f\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0620-\\\\u064a\\\\u066e\\\\u066f\\\\u0671-\\\\u06d3\\\\u06d5\\\\u06e5\\\\u06e6\\\\u06ee\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff\\\\u0710\\\\u0712-\\\\u072f\\\\u074d-\\\\u07a5\\\\u07b1\\\\u07ca-\\\\u07ea\\\\u07f4\\\\u07f5\\\\u07fa\\\\u0800-\\\\u0815\\\\u081a\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08a0-\\\\u08b4\\\\u0904-\\\\u0939\\\\u093d\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bd\\\\u09ce\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e1\\\\u09f0\\\\u09f1\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a72-\\\\u0a74\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abd\\\\u0ad0\\\\u0ae0\\\\u0ae1\\\\u0af9\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3d\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b61\\\\u0b71\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bd0\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c39\\\\u0c3d\\\\u0c58-\\\\u0c5a\\\\u0c60\\\\u0c61\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbd\\\\u0cde\\\\u0ce0\\\\u0ce1\\\\u0cf1\\\\u0cf2\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d\\\\u0d4e\\\\u0d5f-\\\\u0d61\\\\u0d7a-\\\\u0d7f\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0e01-\\\\u0e30\\\\u0e32\\\\u0e33\\\\u0e40-\\\\u0e46\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb0\\\\u0eb2\\\\u0eb3\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f40-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f88-\\\\u0f8c\\\\u1000-\\\\u102a\\\\u103f\\\\u1050-\\\\u1055\\\\u105a-\\\\u105d\\\\u1061\\\\u1065\\\\u1066\\\\u106e-\\\\u1070\\\\u1075-\\\\u1081\\\\u108e\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f5\\\\u13f8-\\\\u13fd\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16ee-\\\\u16f8\\\\u1700-\\\\u170c\\\\u170e-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1780-\\\\u17b3\\\\u17d7\\\\u17dc\\\\u1820-\\\\u1877\\\\u1880-\\\\u18a8\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191e\\\\u1950-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19b0-\\\\u19c9\\\\u1a00-\\\\u1a16\\\\u1a20-\\\\u1a54\\\\u1aa7\\\\u1b05-\\\\u1b33\\\\u1b45-\\\\u1b4b\\\\u1b83-\\\\u1ba0\\\\u1bae\\\\u1baf\\\\u1bba-\\\\u1be5\\\\u1c00-\\\\u1c23\\\\u1c4d-\\\\u1c4f\\\\u1c5a-\\\\u1c7d\\\\u1ce9-\\\\u1cec\\\\u1cee-\\\\u1cf1\\\\u1cf5\\\\u1cf6\\\\u1d00-\\\\u1dbf\\\\u1e00-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2160-\\\\u2188\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cee\\\\u2cf2\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d80-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2e2f\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303c\\\\u3041-\\\\u3096\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400\\\\u4db5\\\\u4e00\\\\u9fd5\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua61f\\\\ua62a\\\\ua62b\\\\ua640-\\\\ua66e\\\\ua67f-\\\\ua69d\\\\ua6a0-\\\\ua6ef\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua7ad\\\\ua7b0-\\\\ua7b7\\\\ua7f7-\\\\ua801\\\\ua803-\\\\ua805\\\\ua807-\\\\ua80a\\\\ua80c-\\\\ua822\\\\ua840-\\\\ua873\\\\ua882-\\\\ua8b3\\\\ua8f2-\\\\ua8f7\\\\ua8fb\\\\ua8fd\\\\ua90a-\\\\ua925\\\\ua930-\\\\ua946\\\\ua960-\\\\ua97c\\\\ua984-\\\\ua9b2\\\\ua9cf\\\\ua9e0-\\\\ua9e4\\\\ua9e6-\\\\ua9ef\\\\ua9fa-\\\\ua9fe\\\\uaa00-\\\\uaa28\\\\uaa40-\\\\uaa42\\\\uaa44-\\\\uaa4b\\\\uaa60-\\\\uaa76\\\\uaa7a\\\\uaa7e-\\\\uaaaf\\\\uaab1\\\\uaab5\\\\uaab6\\\\uaab9-\\\\uaabd\\\\uaac0\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaea\\\\uaaf2-\\\\uaaf4\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uab30-\\\\uab5a\\\\uab5c-\\\\uab65\\\\uab70-\\\\uabe2\\\\uac00\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d\\\\ufb1f-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]\" },\n        peg$c29 = /^[$_\\u200C\\u200D0-9A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n        peg$c30 = { type: \"class\", value: \"[$_\\\\u200c\\\\u200d\\\\u0030-\\\\u0039\\\\u0041-\\\\u005a\\\\u005f\\\\u0061-\\\\u007a\\\\u00aa\\\\u00b5\\\\u00ba\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0300-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u037f\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u0483-\\\\u0487\\\\u048a-\\\\u052f\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u0591-\\\\u05bd\\\\u05bf\\\\u05c1\\\\u05c2\\\\u05c4\\\\u05c5\\\\u05c7\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0610-\\\\u061a\\\\u0620-\\\\u0669\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc\\\\u06df-\\\\u06e8\\\\u06ea-\\\\u06fc\\\\u06ff\\\\u0710-\\\\u074a\\\\u074d-\\\\u07b1\\\\u07c0-\\\\u07f5\\\\u07fa\\\\u0800-\\\\u082d\\\\u0840-\\\\u085b\\\\u08a0-\\\\u08b4\\\\u08e3-\\\\u0963\\\\u0966-\\\\u096f\\\\u0971-\\\\u0983\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bc-\\\\u09c4\\\\u09c7\\\\u09c8\\\\u09cb-\\\\u09ce\\\\u09d7\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e3\\\\u09e6-\\\\u09f1\\\\u0a01-\\\\u0a03\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a3c\\\\u0a3e-\\\\u0a42\\\\u0a47\\\\u0a48\\\\u0a4b-\\\\u0a4d\\\\u0a51\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a66-\\\\u0a75\\\\u0a81-\\\\u0a83\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abc-\\\\u0ac5\\\\u0ac7-\\\\u0ac9\\\\u0acb-\\\\u0acd\\\\u0ad0\\\\u0ae0-\\\\u0ae3\\\\u0ae6-\\\\u0aef\\\\u0af9\\\\u0b01-\\\\u0b03\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3c-\\\\u0b44\\\\u0b47\\\\u0b48\\\\u0b4b-\\\\u0b4d\\\\u0b56\\\\u0b57\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b63\\\\u0b66-\\\\u0b6f\\\\u0b71\\\\u0b82\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bbe-\\\\u0bc2\\\\u0bc6-\\\\u0bc8\\\\u0bca-\\\\u0bcd\\\\u0bd0\\\\u0bd7\\\\u0be6-\\\\u0bef\\\\u0c00-\\\\u0c03\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c39\\\\u0c3d-\\\\u0c44\\\\u0c46-\\\\u0c48\\\\u0c4a-\\\\u0c4d\\\\u0c55\\\\u0c56\\\\u0c58-\\\\u0c5a\\\\u0c60-\\\\u0c63\\\\u0c66-\\\\u0c6f\\\\u0c81-\\\\u0c83\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbc-\\\\u0cc4\\\\u0cc6-\\\\u0cc8\\\\u0cca-\\\\u0ccd\\\\u0cd5\\\\u0cd6\\\\u0cde\\\\u0ce0-\\\\u0ce3\\\\u0ce6-\\\\u0cef\\\\u0cf1\\\\u0cf2\\\\u0d01-\\\\u0d03\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d-\\\\u0d44\\\\u0d46-\\\\u0d48\\\\u0d4a-\\\\u0d4e\\\\u0d57\\\\u0d5f-\\\\u0d63\\\\u0d66-\\\\u0d6f\\\\u0d7a-\\\\u0d7f\\\\u0d82\\\\u0d83\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0dca\\\\u0dcf-\\\\u0dd4\\\\u0dd6\\\\u0dd8-\\\\u0ddf\\\\u0de6-\\\\u0def\\\\u0df2\\\\u0df3\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e\\\\u0e50-\\\\u0e59\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb9\\\\u0ebb-\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0ec8-\\\\u0ecd\\\\u0ed0-\\\\u0ed9\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f18\\\\u0f19\\\\u0f20-\\\\u0f29\\\\u0f35\\\\u0f37\\\\u0f39\\\\u0f3e-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f71-\\\\u0f84\\\\u0f86-\\\\u0f97\\\\u0f99-\\\\u0fbc\\\\u0fc6\\\\u1000-\\\\u1049\\\\u1050-\\\\u109d\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u135d-\\\\u135f\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f5\\\\u13f8-\\\\u13fd\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16ee-\\\\u16f8\\\\u1700-\\\\u170c\\\\u170e-\\\\u1714\\\\u1720-\\\\u1734\\\\u1740-\\\\u1753\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1772\\\\u1773\\\\u1780-\\\\u17d3\\\\u17d7\\\\u17dc\\\\u17dd\\\\u17e0-\\\\u17e9\\\\u180b-\\\\u180d\\\\u1810-\\\\u1819\\\\u1820-\\\\u1877\\\\u1880-\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191e\\\\u1920-\\\\u192b\\\\u1930-\\\\u193b\\\\u1946-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19b0-\\\\u19c9\\\\u19d0-\\\\u19d9\\\\u1a00-\\\\u1a1b\\\\u1a20-\\\\u1a5e\\\\u1a60-\\\\u1a7c\\\\u1a7f-\\\\u1a89\\\\u1a90-\\\\u1a99\\\\u1aa7\\\\u1ab0-\\\\u1abd\\\\u1b00-\\\\u1b4b\\\\u1b50-\\\\u1b59\\\\u1b6b-\\\\u1b73\\\\u1b80-\\\\u1bf3\\\\u1c00-\\\\u1c37\\\\u1c40-\\\\u1c49\\\\u1c4d-\\\\u1c7d\\\\u1cd0-\\\\u1cd2\\\\u1cd4-\\\\u1cf6\\\\u1cf8\\\\u1cf9\\\\u1d00-\\\\u1df5\\\\u1dfc-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u203f\\\\u2040\\\\u2054\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u20d0-\\\\u20dc\\\\u20e1\\\\u20e5-\\\\u20f0\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2160-\\\\u2188\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d7f-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2de0-\\\\u2dff\\\\u2e2f\\\\u3005-\\\\u3007\\\\u3021-\\\\u302f\\\\u3031-\\\\u3035\\\\u3038-\\\\u303c\\\\u3041-\\\\u3096\\\\u3099\\\\u309a\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400\\\\u4db5\\\\u4e00\\\\u9fd5\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua62b\\\\ua640-\\\\ua66f\\\\ua674-\\\\ua67d\\\\ua67f-\\\\ua6f1\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua7ad\\\\ua7b0-\\\\ua7b7\\\\ua7f7-\\\\ua827\\\\ua840-\\\\ua873\\\\ua880-\\\\ua8c4\\\\ua8d0-\\\\ua8d9\\\\ua8e0-\\\\ua8f7\\\\ua8fb\\\\ua8fd\\\\ua900-\\\\ua92d\\\\ua930-\\\\ua953\\\\ua960-\\\\ua97c\\\\ua980-\\\\ua9c0\\\\ua9cf-\\\\ua9d9\\\\ua9e0-\\\\ua9fe\\\\uaa00-\\\\uaa36\\\\uaa40-\\\\uaa4d\\\\uaa50-\\\\uaa59\\\\uaa60-\\\\uaa76\\\\uaa7a-\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaef\\\\uaaf2-\\\\uaaf6\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uab30-\\\\uab5a\\\\uab5c-\\\\uab65\\\\uab70-\\\\uabea\\\\uabec\\\\uabed\\\\uabf0-\\\\uabf9\\\\uac00\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe00-\\\\ufe0f\\\\ufe20-\\\\ufe2f\\\\ufe33\\\\ufe34\\\\ufe4d-\\\\ufe4f\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff10-\\\\uff19\\\\uff21-\\\\uff3a\\\\uff3f\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]\", description: \"[$_\\\\u200c\\\\u200d\\\\u0030-\\\\u0039\\\\u0041-\\\\u005a\\\\u005f\\\\u0061-\\\\u007a\\\\u00aa\\\\u00b5\\\\u00ba\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0300-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u037f\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u0483-\\\\u0487\\\\u048a-\\\\u052f\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u0591-\\\\u05bd\\\\u05bf\\\\u05c1\\\\u05c2\\\\u05c4\\\\u05c5\\\\u05c7\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0610-\\\\u061a\\\\u0620-\\\\u0669\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc\\\\u06df-\\\\u06e8\\\\u06ea-\\\\u06fc\\\\u06ff\\\\u0710-\\\\u074a\\\\u074d-\\\\u07b1\\\\u07c0-\\\\u07f5\\\\u07fa\\\\u0800-\\\\u082d\\\\u0840-\\\\u085b\\\\u08a0-\\\\u08b4\\\\u08e3-\\\\u0963\\\\u0966-\\\\u096f\\\\u0971-\\\\u0983\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bc-\\\\u09c4\\\\u09c7\\\\u09c8\\\\u09cb-\\\\u09ce\\\\u09d7\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e3\\\\u09e6-\\\\u09f1\\\\u0a01-\\\\u0a03\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a3c\\\\u0a3e-\\\\u0a42\\\\u0a47\\\\u0a48\\\\u0a4b-\\\\u0a4d\\\\u0a51\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a66-\\\\u0a75\\\\u0a81-\\\\u0a83\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abc-\\\\u0ac5\\\\u0ac7-\\\\u0ac9\\\\u0acb-\\\\u0acd\\\\u0ad0\\\\u0ae0-\\\\u0ae3\\\\u0ae6-\\\\u0aef\\\\u0af9\\\\u0b01-\\\\u0b03\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3c-\\\\u0b44\\\\u0b47\\\\u0b48\\\\u0b4b-\\\\u0b4d\\\\u0b56\\\\u0b57\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b63\\\\u0b66-\\\\u0b6f\\\\u0b71\\\\u0b82\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bbe-\\\\u0bc2\\\\u0bc6-\\\\u0bc8\\\\u0bca-\\\\u0bcd\\\\u0bd0\\\\u0bd7\\\\u0be6-\\\\u0bef\\\\u0c00-\\\\u0c03\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c39\\\\u0c3d-\\\\u0c44\\\\u0c46-\\\\u0c48\\\\u0c4a-\\\\u0c4d\\\\u0c55\\\\u0c56\\\\u0c58-\\\\u0c5a\\\\u0c60-\\\\u0c63\\\\u0c66-\\\\u0c6f\\\\u0c81-\\\\u0c83\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbc-\\\\u0cc4\\\\u0cc6-\\\\u0cc8\\\\u0cca-\\\\u0ccd\\\\u0cd5\\\\u0cd6\\\\u0cde\\\\u0ce0-\\\\u0ce3\\\\u0ce6-\\\\u0cef\\\\u0cf1\\\\u0cf2\\\\u0d01-\\\\u0d03\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d-\\\\u0d44\\\\u0d46-\\\\u0d48\\\\u0d4a-\\\\u0d4e\\\\u0d57\\\\u0d5f-\\\\u0d63\\\\u0d66-\\\\u0d6f\\\\u0d7a-\\\\u0d7f\\\\u0d82\\\\u0d83\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0dca\\\\u0dcf-\\\\u0dd4\\\\u0dd6\\\\u0dd8-\\\\u0ddf\\\\u0de6-\\\\u0def\\\\u0df2\\\\u0df3\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e\\\\u0e50-\\\\u0e59\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb9\\\\u0ebb-\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0ec8-\\\\u0ecd\\\\u0ed0-\\\\u0ed9\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f18\\\\u0f19\\\\u0f20-\\\\u0f29\\\\u0f35\\\\u0f37\\\\u0f39\\\\u0f3e-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f71-\\\\u0f84\\\\u0f86-\\\\u0f97\\\\u0f99-\\\\u0fbc\\\\u0fc6\\\\u1000-\\\\u1049\\\\u1050-\\\\u109d\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u135d-\\\\u135f\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f5\\\\u13f8-\\\\u13fd\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16ee-\\\\u16f8\\\\u1700-\\\\u170c\\\\u170e-\\\\u1714\\\\u1720-\\\\u1734\\\\u1740-\\\\u1753\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1772\\\\u1773\\\\u1780-\\\\u17d3\\\\u17d7\\\\u17dc\\\\u17dd\\\\u17e0-\\\\u17e9\\\\u180b-\\\\u180d\\\\u1810-\\\\u1819\\\\u1820-\\\\u1877\\\\u1880-\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191e\\\\u1920-\\\\u192b\\\\u1930-\\\\u193b\\\\u1946-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19b0-\\\\u19c9\\\\u19d0-\\\\u19d9\\\\u1a00-\\\\u1a1b\\\\u1a20-\\\\u1a5e\\\\u1a60-\\\\u1a7c\\\\u1a7f-\\\\u1a89\\\\u1a90-\\\\u1a99\\\\u1aa7\\\\u1ab0-\\\\u1abd\\\\u1b00-\\\\u1b4b\\\\u1b50-\\\\u1b59\\\\u1b6b-\\\\u1b73\\\\u1b80-\\\\u1bf3\\\\u1c00-\\\\u1c37\\\\u1c40-\\\\u1c49\\\\u1c4d-\\\\u1c7d\\\\u1cd0-\\\\u1cd2\\\\u1cd4-\\\\u1cf6\\\\u1cf8\\\\u1cf9\\\\u1d00-\\\\u1df5\\\\u1dfc-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u203f\\\\u2040\\\\u2054\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u20d0-\\\\u20dc\\\\u20e1\\\\u20e5-\\\\u20f0\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2160-\\\\u2188\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d7f-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2de0-\\\\u2dff\\\\u2e2f\\\\u3005-\\\\u3007\\\\u3021-\\\\u302f\\\\u3031-\\\\u3035\\\\u3038-\\\\u303c\\\\u3041-\\\\u3096\\\\u3099\\\\u309a\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400\\\\u4db5\\\\u4e00\\\\u9fd5\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua62b\\\\ua640-\\\\ua66f\\\\ua674-\\\\ua67d\\\\ua67f-\\\\ua6f1\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua7ad\\\\ua7b0-\\\\ua7b7\\\\ua7f7-\\\\ua827\\\\ua840-\\\\ua873\\\\ua880-\\\\ua8c4\\\\ua8d0-\\\\ua8d9\\\\ua8e0-\\\\ua8f7\\\\ua8fb\\\\ua8fd\\\\ua900-\\\\ua92d\\\\ua930-\\\\ua953\\\\ua960-\\\\ua97c\\\\ua980-\\\\ua9c0\\\\ua9cf-\\\\ua9d9\\\\ua9e0-\\\\ua9fe\\\\uaa00-\\\\uaa36\\\\uaa40-\\\\uaa4d\\\\uaa50-\\\\uaa59\\\\uaa60-\\\\uaa76\\\\uaa7a-\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaef\\\\uaaf2-\\\\uaaf6\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uab30-\\\\uab5a\\\\uab5c-\\\\uab65\\\\uab70-\\\\uabea\\\\uabec\\\\uabed\\\\uabf0-\\\\uabf9\\\\uac00\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe00-\\\\ufe0f\\\\ufe20-\\\\ufe2f\\\\ufe33\\\\ufe34\\\\ufe4d-\\\\ufe4f\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff10-\\\\uff19\\\\uff21-\\\\uff3a\\\\uff3f\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]\" },\n        peg$c31 = function() {\r\n            return text();\r\n          },\n        peg$c32 = \"/\",\n        peg$c33 = { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n        peg$c34 = \"\\\\\",\n        peg$c35 = { type: \"literal\", value: \"\\\\\", description: \"\\\"\\\\\\\\\\\"\" },\n        peg$c36 = { type: \"any\", description: \"any character\" },\n        peg$c37 = /^[^\\/\\\\]/,\n        peg$c38 = { type: \"class\", value: \"[^/\\\\\\\\]\", description: \"[^/\\\\\\\\]\" },\n        peg$c39 = /^[A-Za-z]/,\n        peg$c40 = { type: \"class\", value: \"[A-Za-z]\", description: \"[A-Za-z]\" },\n        peg$c41 = function(source, flag) {\r\n            var src = '', item;\r\n            for (var i in source) {\r\n              item = source[i];\r\n              src = src + (item instanceof Array?item.join(''):item);\r\n            }\r\n\r\n            return new RegExp(src, flag.join(''));\r\n          },\n        peg$c42 = function() {\r\n            return eval(text());\r\n          },\n        peg$c43 = \"\\\"\",\n        peg$c44 = { type: \"literal\", value: \"\\\"\", description: \"\\\"\\\\\\\"\\\"\" },\n        peg$c45 = /^[^\"\\\\]/,\n        peg$c46 = { type: \"class\", value: \"[^\\\"\\\\\\\\]\", description: \"[^\\\"\\\\\\\\]\" },\n        peg$c47 = \"'\",\n        peg$c48 = { type: \"literal\", value: \"'\", description: \"\\\"'\\\"\" },\n        peg$c49 = /^[^'\\\\]/,\n        peg$c50 = { type: \"class\", value: \"[^'\\\\\\\\]\", description: \"[^'\\\\\\\\]\" },\n        peg$c51 = function(sign, val) {\r\n            return (sign=='-')?-val:val;\r\n          },\n        peg$c52 = \"NaN\",\n        peg$c53 = { type: \"literal\", value: \"NaN\", description: \"\\\"NaN\\\"\" },\n        peg$c54 = function() {\r\n            return NaN;\r\n          },\n        peg$c55 = \"Infinity\",\n        peg$c56 = { type: \"literal\", value: \"Infinity\", description: \"\\\"Infinity\\\"\" },\n        peg$c57 = function() {\r\n            return Infinity;\r\n          },\n        peg$c58 = \"0\",\n        peg$c59 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c60 = /^[Bb]/,\n        peg$c61 = { type: \"class\", value: \"[Bb]\", description: \"[Bb]\" },\n        peg$c62 = /^[01]/,\n        peg$c63 = { type: \"class\", value: \"[01]\", description: \"[01]\" },\n        peg$c64 = function() {\r\n            return Number(text());\r\n          },\n        peg$c65 = /^[Oo]/,\n        peg$c66 = { type: \"class\", value: \"[Oo]\", description: \"[Oo]\" },\n        peg$c67 = /^[0-7]/,\n        peg$c68 = { type: \"class\", value: \"[0-7]\", description: \"[0-7]\" },\n        peg$c69 = /^[Xx]/,\n        peg$c70 = { type: \"class\", value: \"[Xx]\", description: \"[Xx]\" },\n        peg$c71 = /^[0-9A-Fa-f]/,\n        peg$c72 = { type: \"class\", value: \"[0-9A-Fa-f]\", description: \"[0-9A-Fa-f]\" },\n        peg$c73 = /^[0-9]/,\n        peg$c74 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c75 = function() {\r\n            var val = text();\r\n            if ( /^0[0-7]+$/.test(val) ) {\r\n              val = val.charAt(0) + 'O' + val.substr(1);\r\n            }\r\n\r\n            return Number(val);\r\n          },\n        peg$c76 = \"e\",\n        peg$c77 = { type: \"literal\", value: \"e\", description: \"\\\"e\\\"\" },\n        peg$c78 = /^[+\\-]/,\n        peg$c79 = { type: \"class\", value: \"[+-]\", description: \"[+-]\" },\n        peg$c80 = /^[ \\t\\r\\n\\f]/,\n        peg$c81 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n\\\\f]\", description: \"[ \\\\t\\\\r\\\\n\\\\f]\" },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(\n        message,\n        null,\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p, ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsescope_relative_selector_list() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parsescope_relative_selector();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseS();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c0;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseS();\n            if (s6 === peg$FAILED) {\n              s6 = null;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsescope_relative_selector();\n              if (s7 !== peg$FAILED) {\n                s5 = [s5, s6, s7];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c0;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c1); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseS();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsescope_relative_selector();\n                if (s7 !== peg$FAILED) {\n                  s5 = [s5, s6, s7];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c2(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsescope_relative_selector() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parsecombinator();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecompound_selector();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          s5 = peg$parsecombinator();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsecompound_selector();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            s5 = peg$parsecombinator();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsecompound_selector();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c3(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecombinator() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseS();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s2 = peg$c4;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c5); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseS();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c6();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseS();\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parseS();\n          }\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c7();\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecompound_selector() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsepseudo_class();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsepseudo_class();\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c8(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = peg$parseprop();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseid();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parseclass();\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseid();\n            if (s4 === peg$FAILED) {\n              s4 = peg$parseclass();\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s2 = [s2, s3];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parsepseudo_class();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parsepseudo_class();\n          }\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c9(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = [];\n          s2 = peg$parseid();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseclass();\n          }\n          if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n              s1.push(s2);\n              s2 = peg$parseid();\n              if (s2 === peg$FAILED) {\n                s2 = peg$parseclass();\n              }\n            }\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsepseudo_class();\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              s3 = peg$parsepseudo_class();\n            }\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c10(s1, s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseprop() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s1 = peg$c11;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$parsePROP();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c13(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseid() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c14;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c15); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIDENT();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c16(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseclass() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c17;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIDENT();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c19(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepseudo_class() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s1 = peg$c20;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIDENT();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s4 = peg$c22;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseS();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseVALUE();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseS();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  s9 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s10 = peg$c0;\n                    peg$currPos++;\n                  } else {\n                    s10 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c1); }\n                  }\n                  if (s10 !== peg$FAILED) {\n                    s11 = peg$parseS();\n                    if (s11 === peg$FAILED) {\n                      s11 = null;\n                    }\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parseVALUE();\n                      if (s12 !== peg$FAILED) {\n                        s13 = peg$parseS();\n                        if (s13 === peg$FAILED) {\n                          s13 = null;\n                        }\n                        if (s13 !== peg$FAILED) {\n                          s10 = [s10, s11, s12, s13];\n                          s9 = s10;\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s10 = peg$c0;\n                      peg$currPos++;\n                    } else {\n                      s10 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c1); }\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parseS();\n                      if (s11 === peg$FAILED) {\n                        s11 = null;\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parseVALUE();\n                        if (s12 !== peg$FAILED) {\n                          s13 = peg$parseS();\n                          if (s13 === peg$FAILED) {\n                            s13 = null;\n                          }\n                          if (s13 !== peg$FAILED) {\n                            s10 = [s10, s11, s12, s13];\n                            s9 = s10;\n                          } else {\n                            peg$currPos = s9;\n                            s9 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseS();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s10 = peg$c24;\n                        peg$currPos++;\n                      } else {\n                        s10 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c25); }\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s4 = [s4, s5, s6, s7, s8, s9, s10];\n                        s3 = s4;\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c26(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseVALUE() {\n      var s0;\n\n      s0 = peg$parseNUMBER();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseSTRING();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseREGEX();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePROP() {\n      var s0;\n\n      s0 = peg$parseSTRING();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseIDENT();\n      }\n\n      return s0;\n    }\n\n    function peg$parseIDENT() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (peg$c27.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c29.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c29.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c31();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseREGEX() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c32;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 92) {\n          s4 = peg$c34;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c36); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          if (peg$c37.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c38); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c34;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c36); }\n              }\n              if (s5 !== peg$FAILED) {\n                s4 = [s4, s5];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n            if (s3 === peg$FAILED) {\n              if (peg$c37.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c38); }\n              }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s3 = peg$c32;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c33); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            if (peg$c39.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c40); }\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              if (peg$c39.test(input.charAt(peg$currPos))) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c40); }\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c41(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseSTRING() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parseSTRING1();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseSTRING2();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c42();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseSTRING1() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c43;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 92) {\n          s4 = peg$c34;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c36); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          if (peg$c45.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c46); }\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s4 = peg$c34;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c36); }\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            if (peg$c45.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c46); }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c43;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c44); }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseSTRING2() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c47;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 92) {\n          s4 = peg$c34;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c36); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          if (peg$c49.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c50); }\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s4 = peg$c34;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c36); }\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            if (peg$c49.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c50); }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c47;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseNUMBER() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseSIGN();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNAN();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseINFINITY();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseBINARY();\n            if (s2 === peg$FAILED) {\n              s2 = peg$parseOCTAL();\n              if (s2 === peg$FAILED) {\n                s2 = peg$parseHEXADECIMAL();\n                if (s2 === peg$FAILED) {\n                  s2 = peg$parseDECIMAL();\n                  if (s2 === peg$FAILED) {\n                    s2 = peg$parseFLOAT();\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c51(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseNAN() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c52) {\n        s1 = peg$c52;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c53); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c54();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseINFINITY() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 8) === peg$c55) {\n        s1 = peg$c55;\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c57();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseBINARY() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c58;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c62.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c63); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c62.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c63); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c64();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseOCTAL() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c58;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (peg$c65.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c66); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c67.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c68); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c67.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c68); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c64();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseHEXADECIMAL() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c58;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (peg$c69.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c70); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c71.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c71.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c64();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseDECIMAL() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c73.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c73.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s3 = peg$c17;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          if (peg$c73.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            if (peg$c73.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c74); }\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseINDEX();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c75();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseFLOAT() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c17;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c73.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c74); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c73.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c74); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseINDEX();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c64();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseINDEX() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 101) {\n        s1 = peg$c76;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c77); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSIGN();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c73.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c73.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c74); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseSIGN() {\n      var s0;\n\n      if (peg$c78.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c79); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseS() {\n      var s0, s1;\n\n      s0 = [];\n      if (peg$c80.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c81); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c80.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c81); }\n          }\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n\r\n      function Selector(exp) {\r\n        for (var i in exp) {\r\n          exp[i].next = exp[+i+1];\r\n          this.push(exp[i]);\r\n        }\r\n\r\n        this.start = exp[0];\r\n      }\r\n      Selector.prototype = [];\r\n      Selector.prototype.toString = function () {\r\n        return this.join('');\r\n      };\r\n      \r\n      function Combinator(operator) {\r\n        this.operator = operator;\r\n      }\r\n      Combinator.prototype = {\r\n        toString: function () {\r\n          return this.operator;\r\n        }\r\n      };\r\n      \r\n      function Compound(element, attributes, pseudoClasses) {\r\n        if (element) {\r\n          this.element = element;\r\n          this.push(element);\r\n        }\r\n        \r\n        if (attributes && attributes.length) {\r\n          this.attributes = attributes;\r\n          this.push.apply(this, attributes);\r\n        }\r\n\r\n        if (pseudoClasses && pseudoClasses.length) {\r\n          this.pseudoClasses = pseudoClasses;\r\n          this.push.apply(this, pseudoClasses);\r\n        }\r\n      }\r\n      Compound.prototype = [];\r\n      Compound.prototype.toString = function () {\r\n        return this.join('');\r\n      };\r\n      \r\n      function Prop(ident) {\r\n        this.type = 'Prop';\r\n        this.ident = ident;\r\n      }\r\n      Prop.prototype = {\r\n        toString: function () {\r\n          return this.ident;\r\n        }\r\n      };\r\n      \r\n      function Id(ident) {\r\n        this.type = 'Id';\r\n        this.ident = ident;\r\n      }\r\n      Id.prototype = {\r\n        toString: function () {\r\n          return '#' + this.ident;\r\n        }\r\n      };\r\n      \r\n      function Class(ident) {\r\n        this.type = 'Class';\r\n        this.ident = ident;\r\n      }\r\n      Class.prototype = {\r\n        toString: function () {\r\n          return '.' + this.ident;\r\n        }\r\n      };\r\n\r\n      function PseudoClass(ident, args) {\r\n        this.type = 'PseudoClass';\r\n        this.ident = ident;\r\n        this.args = args || [];\r\n      }\r\n      PseudoClass.prototype = {\r\n        toString: function () {\r\n          if (this.args && this.args.length) {\r\n            return ':' + this.ident + '(' + this.args.join() + ')';\r\n          } else {\r\n            return ':' + this.ident;\r\n          }\r\n        }\r\n      };\r\n      \r\n      /*\r\n      function Attribute(ident, match, value, flag) {\r\n        this.ident = ident;\r\n        this.match = match;\r\n        this.value = value;\r\n        this.flag = flag;\r\n      }\r\n      */\r\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(\n        null,\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/css-parser.pegjs\n ** module id = 3\n ** module chunks = 0\n **/","DEFINE_MACRO(COMPARE_TWO_ARRAY, function (m$array1, m$array2) {\r\n  let m$result = true;\r\n\r\n  if (m$array1.length == m$array2.length) {\r\n    var m$i = 0, m$I = m$array1.length;\r\n    while (m$i < m$I) {\r\n      if (m$array1[m$i] !== m$array2[m$i]) {\r\n        m$result = false;\r\n        break;\r\n      }\r\n      \r\n      m$i++;\r\n    }\r\n  } else {\r\n    m$result = false;\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\nDEFINE_MACRO(FOR_EACH, function(m$input, m$visitor) {\r\n  let m$i = 0, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    m$visitor(m$input[m$i], m$i, m$input);\r\n    m$i++;\r\n  }\r\n});\r\n\r\nDEFINE_MACRO(EVERY, function(m$input, m$visitor) {\r\n  let m$result = true;\r\n\r\n  let m$i = 0, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    if (!m$visitor(m$input[m$i], m$i, m$input)) {\r\n      m$result = false;\r\n      break;\r\n    }\r\n\r\n    m$i++;\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\nDEFINE_MACRO(OFFSET_EVERY, function(m$input, m$offse, m$visitor) {\r\n  let m$result = true;\r\n\r\n  let m$i = m$offse, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    if (!m$visitor(m$input[m$i], m$i, m$input)) {\r\n      m$result = false;\r\n      break;\r\n    }\r\n\r\n    m$i++;\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\nDEFINE_MACRO(SOME, function(m$input, m$visitor) {\r\n  let m$result = false;\r\n\r\n  let m$i = 0, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    if (m$visitor(m$input[m$i], m$i, m$input)) {\r\n      m$result = true;\r\n      break;\r\n    }\r\n\r\n    m$i++;\r\n  }\r\n\r\n  return m$result;\r\n});\r\nDEFINE_MACRO(REVERSE_SOME, function(m$input, m$visitor) {\r\n  let m$result = false;\r\n\r\n  let m$i = m$input.length-1;\r\n  while(m$i > 0) {\r\n    if (m$visitor(m$input[m$i], m$i, m$input)) {\r\n      m$result = true;\r\n      break;\r\n    }\r\n\r\n    m$i--;\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\n\r\nDEFINE_MACRO(FILTER, function(m$input, m$visitor) {\r\n  const m$filtered = [];\r\n\r\n  let m$i = 0, m$I = m$input.length, m$val;\r\n  while (m$i < m$I) {\r\n    m$val = m$input[m$i];\r\n    if (m$visitor(m$val, m$i, m$input)) {\r\n      m$filtered.push(m$val);\r\n    }\r\n\r\n    m$i++;\r\n  }\r\n\r\n  return m$filtered;\r\n});\r\n\r\nDEFINE_MACRO(MAP, (m$input, m$visitor) => {\r\n  const m$length = m$input.length;\r\n  const m$result = new Array(m$length);\r\n\r\n  let m$i = 0, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    m$result[m$i] = m$visitor(m$input[m$i], m$i, m$input);\r\n    m$i++;\r\n  }\r\n  \r\n  return m$result;\r\n});\r\n\r\nDEFINE_MACRO(REDUCE_BY_INITVAL, function(m$input, m$visitor, m$initialValue) {\r\n  let m$result = m$initialValue;\r\n\r\n  let m$i = 0, m$I = m$input.length;\r\n  while (m$i < m$I) {\r\n    m$result = m$visitor(m$result, m$input[m$i], m$i, m$input);\r\n    m$i++;\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\n\r\nDEFINE_MACRO(MAP_PUSH, function(m$map, m$key, m$newVal) {\r\n  let m$array = m$map.get(m$key);\r\n  if (m$array instanceof Array) {\r\n    m$array.push(m$newVal);\r\n  } else {\r\n    m$map.set(m$key, [m$newVal]);\r\n  }\r\n});\r\n\r\nDEFINE_MACRO(BREADTH_FIRST_TRAVERSAL, (m$target, m$depth, m$visitor) => {\r\n  var m$buffer = [[m$target, [], []]];\r\n  var m$tmp, m$node, m$path, m$parent;\r\n  var m$key, m$newNode;\r\n  while (m$buffer.length) {\r\n    m$tmp = m$buffer.shift();\r\n    m$node = m$tmp[0];\r\n    m$path = m$tmp[1];\r\n    m$parent = m$tmp[2];\r\n    if (m$depth === undefined || m$path.length == m$depth) {\r\n      m$visitor(m$node, m$path, m$parent);\r\n    }\r\n    if (typeof m$node == 'object' && (m$depth === undefined || m$path.length < m$depth)) {\r\n      m$parent = m$parent.slice();\r\n      m$parent.push(m$node);\r\n      for (m$key in m$node) {\r\n        m$newNode = m$node[m$key];\r\n        if (m$parent.indexOf(m$newNode) == -1) {\r\n          m$buffer.push([m$newNode, m$path.concat(m$key), m$parent]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nDEFINE_MACRO(BREADTH_FIRST_SEARCH, (m$target, m$depth, m$visitor) => {\r\n  var m$result;\r\n\r\n  var m$buffer = [[m$target, [], []]];\r\n  var m$tmp, m$node, m$path, m$parent;\r\n  var m$key, m$newNode;\r\n  while (m$buffer.length) {\r\n    m$tmp = m$buffer.shift();\r\n    m$node = m$tmp[0];\r\n    m$path = m$tmp[1];\r\n    m$parent = m$tmp[2];\r\n    if (m$depth === undefined || m$path.length == m$depth) {\r\n      if (m$visitor(m$node, m$path, m$parent)){\r\n        m$result = [m$node, m$path, m$parent];\r\n        break;\r\n      }\r\n    } else if (typeof m$node == 'object' && (m$depth === undefined || m$path.length < m$depth)) {\r\n      m$parent = m$parent.slice();\r\n      m$parent.push(m$node);\r\n      for (m$key in m$node) {\r\n        m$newNode = m$node[m$key];\r\n        if (m$parent.indexOf(m$newNode) == -1) {\r\n          m$buffer.push([m$newNode, m$path.concat(m$key), m$parent]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return m$result;\r\n});\r\n\r\nDEFINE_MACRO(DEPTH_FIRST_TRAVERSAL, (m$target, m$visitor) => {\r\n  var m$traverse = function m$traverse(m$node, m$path, m$parent) {\r\n    m$visitor(m$node, m$path, m$parent);\r\n    if (typeof m$node == 'object') {\r\n      var m$key, m$newNode;\r\n      m$parent = m$parent.slice();\r\n      m$parent.push(m$node);\r\n      for (m$key in m$node) {\r\n        m$newNode = m$node[m$key];\r\n        if (m$parent.indexOf(m$newNode) == -1) {\r\n          m$traverse(m$newNode, m$path.concat(m$key), m$parent)\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  m$traverse(m$target, [], []);\r\n});\r\n\r\nDEFINE_MACRO(DEPTH_FIRST_SEARCH, (m$target, m$visitor) => {\r\n  var m$traverse = function m$traverse(m$node, m$path, m$parent) {\r\n    if (m$visitor(m$node, m$path, m$parent)) {\r\n      return [m$node, m$path, m$parent];\r\n    }\r\n\r\n    if (typeof m$node == 'object') {\r\n      var m$key, m$newNode, m$tmp;\r\n      m$parent = m$parent.slice();\r\n      m$parent.push(m$node);\r\n      for (m$key in m$node) {\r\n        m$newNode = m$node[m$key];\r\n        if (m$parent.indexOf(m$newNode) == -1) {\r\n          if (m$tmp = m$traverse(m$newNode, m$path.concat(m$key), m$parent)) {\r\n            return m$tmp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return m$traverse(m$target, [], []);\r\n});\r\n\r\n\r\nexport function getFromPath(root, path, delimiter='/') {\r\n  if (path.charAt(0) == delimiter) {\r\n    path = path.substr(1);\r\n  }\r\n  \r\n  return getFromPathArray(root, path.split(delimiter));\r\n}\r\n\r\nexport function getFromPathArray(root, path) {\r\n  var result = root;\r\n  EVERY(path, (val, index, array) => {\r\n    result = result[val];\r\n    return (result !== undefined && result !== null);\r\n  });\r\n  return result;\r\n}\r\n\r\nexport function listStruct(target, type='bfs', depth) {\r\n  var result = [];\r\n  type = type.toLowerCase();\r\n  if (type == 'bfs') {\r\n    BREADTH_FIRST_TRAVERSAL(target, depth, (val, path, parent)=>{\r\n      result.push([path, parent, val]);\r\n    });\r\n  } else if (type == 'dfs') {\r\n    DEPTH_FIRST_TRAVERSAL(target, (val, path, parent)=>{\r\n      result.push([path, parent, val]);\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util.js\n **/"],"sourceRoot":""}